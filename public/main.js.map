{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/app/app.component.css","webpack:///./src/app/app/app.component.html","webpack:///./src/app/app/app.component.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/components/fileupload/file-upload.component.css","webpack:///./src/app/components/fileupload/file-upload.component.html","webpack:///./src/app/components/fileupload/file-upload.component.ts","webpack:///./src/app/components/places-input/places-input.component.css","webpack:///./src/app/components/places-input/places-input.component.html","webpack:///./src/app/components/places-input/places-input.component.ts","webpack:///./src/app/components/plan-files/plan-files.component.css","webpack:///./src/app/components/plan-files/plan-files.component.html","webpack:///./src/app/components/plan-files/plan-files.component.ts","webpack:///./src/app/components/step-files/step-files.component.css","webpack:///./src/app/components/step-files/step-files.component.html","webpack:///./src/app/components/step-files/step-files.component.ts","webpack:///./src/app/configs.ts","webpack:///./src/app/directives/httpSrc/httpSrc.directive.ts","webpack:///./src/app/models/Cost.ts","webpack:///./src/app/models/Distance.ts","webpack:///./src/app/models/Planing.ts","webpack:///./src/app/models/Step.ts","webpack:///./src/app/models/Todo.ts","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/plannings/plannings.component.css","webpack:///./src/app/pages/plannings/plannings.component.html","webpack:///./src/app/pages/plannings/plannings.component.ts","webpack:///./src/app/pages/planoverview/calendar/calendar.component.css","webpack:///./src/app/pages/planoverview/calendar/calendar.component.html","webpack:///./src/app/pages/planoverview/calendar/calendar.component.ts","webpack:///./src/app/pages/planoverview/files/files.component.css","webpack:///./src/app/pages/planoverview/files/files.component.html","webpack:///./src/app/pages/planoverview/files/files.component.ts","webpack:///./src/app/pages/planoverview/images/images.component.css","webpack:///./src/app/pages/planoverview/images/images.component.html","webpack:///./src/app/pages/planoverview/images/images.component.ts","webpack:///./src/app/pages/planoverview/money/money.component.css","webpack:///./src/app/pages/planoverview/money/money.component.html","webpack:///./src/app/pages/planoverview/money/money.component.ts","webpack:///./src/app/pages/planoverview/overview/overview.component.css","webpack:///./src/app/pages/planoverview/overview/overview.component.html","webpack:///./src/app/pages/planoverview/overview/overview.component.ts","webpack:///./src/app/pages/planoverview/planoverview.component.css","webpack:///./src/app/pages/planoverview/planoverview.component.html","webpack:///./src/app/pages/planoverview/planoverview.component.ts","webpack:///./src/app/pages/planoverview/route/route.component.css","webpack:///./src/app/pages/planoverview/route/route.component.html","webpack:///./src/app/pages/planoverview/route/route.component.ts","webpack:///./src/app/pages/planoverview/share/share.component.css","webpack:///./src/app/pages/planoverview/share/share.component.html","webpack:///./src/app/pages/planoverview/share/share.component.ts","webpack:///./src/app/pages/planoverview/stepdetail/stepdetail.component.css","webpack:///./src/app/pages/planoverview/stepdetail/stepdetail.component.html","webpack:///./src/app/pages/planoverview/stepdetail/stepdetail.component.ts","webpack:///./src/app/pages/register/register.component.html","webpack:///./src/app/pages/register/register.component.ts","webpack:///./src/app/pages/start/start.component.css","webpack:///./src/app/pages/start/start.component.html","webpack:///./src/app/pages/start/start.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/file.service.ts","webpack:///./src/app/services/httpInterceptor.service.ts","webpack:///./src/app/services/planning.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0D;AAEjB;AACI;AACgC;AAelD;AAEe;AAEc;AACmB;AAClC;AAEU;AACY;AACY;AACS;AACrB;AAEZ;AACyB;AACd;AAC1B;AACiD;AACT;AACS;AACD;AAC9B;AACsB;AACA;AACA;AACY;AACG;AACZ;AACL;AACF;AACU;AACA;AAyDlF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtDrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,iGAAmB;gBACnB,qGAAoB;gBACpB,+FAAkB;gBAClB,+FAAkB;gBAElB,uFAAgB;gBAChB,+DAAY;gBACZ,4EAAc;gBACd,qFAAiB;gBACjB,4EAAc;gBACd,wFAAkB;gBAClB,iGAAqB;gBACrB,wGAAmB;gBACnB,kGAAiB;gBACjB,yFAAc;gBACd,kGAAiB;gBACjB,yFAAc;gBACd,4FAAe;gBACf,yFAAc;gBACd,yFAAc;aACf;YACD,OAAO,EAAE;gBACP,4FAAuB;gBAEvB,uEAAqB,EAAE,gEAAc;gBACrC,oEAAkB,EAAC,qEAAmB;gBACtC,qEAAmB,EAAC,+DAAa;gBACjC,iEAAe,EAAC,+DAAa;gBAC7B,+DAAa,EAAE,mEAAiB;gBAChC,kEAAgB,EAAE,+DAAa;gBAE/B,0DAAW;gBACX,uEAAa;gBACb,qEAAgB;gBAChB,oEAAgB;gBAChB,uDAAa,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE,iDAAO,CAAC,UAAU;iBAC3B,CAAC;aACH;YACD,SAAS,EAAE;gBACT,qDAAS;gBACT,mEAAW;gBACX;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,yFAAsB;oBAChC,KAAK,EAAE,IAAI;iBACZ;gBACD,2EAAe;gBACf,mEAAW;aACZ;YACD,SAAS,EAAE,CAAC,+DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GiC;AACd;AAEsB;AACY;AACS;AAE3C;AACsB;AAGa;AACe;AACZ;AACP;AAGxE,IAAM,SAAS,GAAY;IACzB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2EAAc;QACzB,SAAS,EAAE,MAAM;KAClB,EAAC;QACA,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,2EAAc;QACzB,SAAS,EAAE,MAAM;KAClB,EAAC;QACA,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,qFAAiB;QAC5B,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,qDAAS,CAAC;QACxB,SAAS,EAAE,uFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,qDAAS,CAAC;QACxB,SAAS,EAAE,gGAAqB;KACjC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,qDAAS,CAAC;QACxB,SAAS,EAAE,wFAAc;KAC1B;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,qDAAS,CAAC;QACxB,SAAS,EAAE,uGAAmB;KAC/B;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,qDAAS,CAAC;QACxB,SAAS,EAAE,2FAAe;KAC3B;CAOF;AAYD;IAAA;IAAiC,CAAC;IAArB,gBAAgB;QAX5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAClB,SAAS,EACT,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,8BAA8B;iBACxD;aACF;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,gBAAgB,CAAK;IAAD,uBAAC;CAAA;AAAL;;;;;;;;;;;;AC/E7B,uB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IACE;IAAc,CAAC;IADJ,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPsB;AACU;AACH;AAGtD;IACE,mBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAE,CAAC;IAEvE,+BAAW,GAAX;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAC;YACpC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IATU,SAAS;QADrB,gEAAU,EAAE;yCAEsB,kEAAW,EAAkB,sDAAM;OADzD,SAAS,CAUrB;IAAD,gBAAC;CAAA;AAVqB;;;;;;;;;;;;ACLtB,yBAAyB,aAAa,EAAE,cAAc,wBAAwB,+BAA+B,wBAAwB,+BAA+B,oBAAoB,KAAK,gBAAgB,wBAAwB,KAAK,cAAc,wBAAwB,gCAAgC,wBAAwB,+BAA+B,oBAAoB,KAAK,C;;;;;;;;;;;ACAhY,sDAAsD,eAAe,iGAAiG,UAAU,0aAA0a,KAAK,6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlgB;AACnC;AAClB;AAOxC;IAYI,6BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAX5C,WAAM,GAAkB,EAAE,CAAC;QAC3B,kBAAa,GAAW,UAAU,CAAC;QAI1B,YAAO,GAAW,oBAAoB,CAAC;QACvC,aAAQ,GAAW,CAAC,CAAC;QACrB,YAAO,GAAW,CAAC,CAAC,CAAC,MAAM;QAC1B,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAClC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEI,CAAC;IAEjD,sCAAQ,GAAR;QACI,EAAE,EAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YACf,IAAI,CAAC,QAAQ,GAAG,kCAAkC,CAAC;QACvD,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,KAAK;QACd,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAEqC,wCAAU,GAAV,UAAW,KAAK;QAClD,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAChC,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;IAEsC,yCAAW,GAAX,UAAY,KAAK;QACpD,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAChC,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;IAEoC,uCAAS,GAAT,UAAU,KAAK;QAChD,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAChC,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;IAEsC,yCAAW,GAAX,UAAY,KAAK;QACpD,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAChC,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;IAEiC,oCAAM,GAAN,UAAO,KAAK;QAC1C,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAChC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,uCAAS,GAAT,UAAU,KAAK;QAAf,iBA6BC;QA5BG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,cAAc;QAChC,4CAA4C;QAC5C,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;YACxC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACvD,CAAC;YACD,QAAQ;YACR,uCAAuC;YACvC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,gDAAO,CAAC,OAAO,CAAC,CAAC;YAExC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;iBACtC,SAAS,CACV,iBAAO;gBACH,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACxB,CAAC,EACD,eAAK;gBACD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAC7C,CAAC,CAAC;QACV,CAAC;IACL,CAAC;IAEO,0CAAY,GAApB,UAAqB,KAAK;QACtB,wBAAwB;QACxB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uCAAuC,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;YACrF,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;IACpC,CAAC;IAEO,kDAAoB,GAA5B,UAA6B,KAAK;QAC9B,gCAAgC;QAChC,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACrC,GAAG,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC,CAAC;QAC/D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpC,qBAAqB;YACrB,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACxE,6BAA6B;YAC7B,IAAI,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACtC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5D,CAAC;YACD,kBAAkB;YAClB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IAEO,6CAAe,GAAvB,UAAwB,IAAI;QACxB,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QAC7C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,+BAA+B;QAChF,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,GAAG,8BAA8B,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC;IACtI,CAAC;IAjHQ;QAAR,2DAAK,EAAE;;qDAAc;IACb;QAAR,2DAAK,EAAE;;yDAAkB;IACjB;QAAR,2DAAK,EAAE;;oDAAa;IACZ;QAAR,2DAAK,EAAE;;wDAAwC;IACvC;QAAR,2DAAK,EAAE;;yDAAsB;IACrB;QAAR,2DAAK,EAAE;;wDAAqB;IACnB;QAAT,4DAAM,EAAE;;6DAAmC;IAClC;QAAT,4DAAM,EAAE;;6DAAmC;IAeN;QAArC,kEAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;yDAGpC;IAEsC;QAAtC,kEAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;0DAGrC;IAEoC;QAApC,kEAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;wDAGnC;IAEsC;QAAtC,kEAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;0DAGrC;IAEiC;QAAjC,kEAAY,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qDAMhC;IAnDQ,mBAAmB;QAL/B,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;;;SAG9B,CAAC;yCAamC,kEAAW;OAZnC,mBAAmB,CAqH/B;IAAD,0BAAC;CAAA;AArH+B;;;;;;;;;;;;ACThC,mB;;;;;;;;;;;ACAA,+KAA+K,yDAAyD,kBAAkB,sBAAsB,YAAY,sIAAsI,YAAY,yPAAyP,uBAAuB,iD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjmB;AACrD;AACU;AAGT;AAOzC;IAaI,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAZpC,WAAM,GAAkB,EAAE,CAAC;QAGnB,gBAAW,GAAG,EAAE,CAAC;QAGhB,cAAS,GAAG,KAAK,CAAC;QAElB,qBAAgB,GAAW,0BAA0B,CAAC;QACrD,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;IAGR,CAAC;IAEzC,uCAAQ,GAAR;IACA,CAAC;IAED,0CAAW,GAAX,UAAY,KAAK;QACb,IAAI,IAAI,GAAG,IAAI,iDAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,wCAAS,GAAT,UAAU,KAAK;QAAf,iBAYC;QAVG,IAAI,OAAO,GAAG,IAAI,iDAAI,EAAE,CAAC;QACzB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEpC,EAAE,EAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YAAC,MAAM,CAAC;QAE3B,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,UAAC,WAAW;YACjC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0DAA2B,GAA3B,UAA4B,OAAwB;QAApD,iBAOC;QANG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,KAAmB;YACpD,IAAI,OAAO,GAAG,IAAI,iDAAI,EAAE,CAAC;YACzB,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;YACpC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC3C,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAc,GAAd,UAAe,OAAwB;QACrC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;IACjD,CAAC;IAEO,2CAAY,GAApB,UAAqB,KAAU,EAAE,EAAO;QAAxC,iBAUC;QATG,EAAE,EAAC,CAAC,KAAK,CAAC,EAAC;YACP,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC1B,IAAI,GAAG,GAAG,gDAAO,CAAC,qBAAqB,GAAG,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC5E,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;gBAClC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEO,2CAAY,GAApB,UAAqB,OAAO,EAAE,EAAO;QACnC,IAAI,GAAG,GAAG,gDAAO,CAAC,gBAAgB,GAAG,WAAW,GAAC,OAAO,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;YACpC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IA7DQ;QAAR,2DAAK,EAAE;;2DAAmB;IAClB;QAAR,2DAAK,EAAE;;4DAAY;IACX;QAAR,2DAAK,EAAE;;kEAAuD;IACrD;QAAT,4DAAM,EAAE;;kEAAuC;IAVvC,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;yCAc4B,+DAAU;OAb3B,oBAAoB,CAsEhC;IAAD,2BAAC;CAAA;AAtEgC;;;;;;;;;;;;ACZjC,mB;;;;;;;;;;;ACAA,4GAA4G,wEAAwE,OAAO,IAAI,eAAe,+I;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArJ;AACC;AAEV;AACkB;AAOlE;IAII,4BACY,WAAwB,EACxB,eAAgC;QADhC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;IACxC,CAAC;IAEL,qCAAQ,GAAR,cAAa,CAAC;IAEd,yCAAY,GAAZ,UAAa,IAAU;QACnB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAGD,+CAAkB,GAAlB,UAAmB,KAAK;QACpB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC9D,CAAC;IAhBQ;QAAR,2DAAK,EAAE;kCAAO,wDAAQ;oDAAC;IAFf,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;;SAGzB,CAAC;yCAM2B,kEAAW;YACP,0EAAe;OANnC,kBAAkB,CAoB9B;IAAD,yBAAC;CAAA;AApB8B;;;;;;;;;;;;ACX/B,mB;;;;;;;;;;;ACAA,gHAAgH,wEAAwE,OAAO,IAAI,eAAe,oH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzJ;AACC;AAEQ;AACzB;AACO;AAOhD;IAKI,4BACY,WAAwB,EACxB,eAAgC;QADhC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;IACxC,CAAC;IAEL,qCAAQ,GAAR,cAAa,CAAC;IAEd,yCAAY,GAAZ,UAAa,IAAU;QACnB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,+CAAkB,GAAlB,UAAmB,KAAK,EAAE,IAAI;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,IAAI;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAGO,qCAAQ,GAAhB,UAAiB,MAAM,EAAE,EAAE;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,IAAI,CAAC,CAAC;YACb,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IA5BQ;QAAR,2DAAK,EAAE;kCAAO,wDAAQ;oDAAC;IACf;QAAR,2DAAK,EAAE;kCAAO,iDAAI;oDAAC;IAHX,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;;SAGzB,CAAC;yCAO2B,kEAAW;YACP,0EAAe;OAPnC,kBAAkB,CAgC9B;IAAD,yBAAC;CAAA;AAhC8B;;;;;;;;;;;;;ACZ/B;AAAA;AAAA;IAAA;IAkBA,CAAC;IAhBiB,kBAAU,GAAG,yCAAyC,CAAC;IACrE,kDAAkD;IACpC,eAAO,GAAG,0CAA0C,CAAC;IACrD,gBAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC;IACtC,mBAAW,GAAG,OAAO,CAAC,OAAO,GAAG,WAAW,CAAC;IAC5C,oBAAY,GAAG,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC;IAC9C,6BAAqB,GAAG,OAAO,CAAC,OAAO,GAAG,sBAAsB,CAAC;IACjE,uBAAe,GAAG,OAAO,CAAC,OAAO,GAAG,gBAAgB,CAAC;IACrD,wBAAgB,GAAG,OAAO,CAAC,OAAO,GAAG,iBAAiB,CAAC;IACvD,sBAAc,GAAG,OAAO,CAAC,OAAO,GAAG,eAAe,CAAC;IACnD,yBAAiB,GAAG,OAAO,CAAC,OAAO,GAAG,kBAAkB,CAAC;IAEzD,eAAO,GAAG,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IAClD,qEAAqE;IAEvD,gBAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC;IACxD,cAAC;CAAA;AAlBmB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACsB;AAKnF;IAEE,0BACU,IAAgB,EAChB,OAAmB;QADnB,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAY;QAG3B,+BAA+B;QAC/B,2CAA2C;QAC3C,4DAA4D;QAC5D,MAAM;QACN,IAAI;QACJ,mCAAmC;IACrC,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAIO,uCAAY,GAApB;QAAA,iBAOC;QANC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAClC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACrF,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YACnD,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC;IATiB;QAAjB,2DAAK,CAAC,SAAS,CAAC;;sDAAmB;IAnBzB,gBAAgB;QAH5B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;SACtB,CAAC;yCAIgB,+DAAU;YACP,wDAAU;OAJlB,gBAAgB,CA8B5B;IAAD,uBAAC;CAAA;AA9B4B;;;;;;;;;;;;;ACJ7B;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACAD;AAAA;AAAA;IAAA;IAYA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IACI;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAWL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACRD,6xB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACvB;AACwB;AACR;AACV;AAMxC;IAKE,wBACU,IAAgB,EAChB,KAAqB,EACrB,MAAc,EACd,WAAwB;QAHxB,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAChC,CAAC;IAEH,iCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK;aACT,WAAW;aACX,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,YAAY,EAAnB,CAAmB,CAAC;aACrC,SAAS,CAAC,gBAAM;YACf,IAAI,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC;YAChC,EAAE,EAAC,KAAK,CAAC,EAAC;gBACR,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBACvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,CAAC;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL;QAAA,iBAUC;QATC,IAAI,SAAS,GAAG;YACd,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAO,CAAC,QAAQ,EAAE,SAAS,CAAC;aAC1C,SAAS,CAAC,UAAC,IAAS;YACnB,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IApCU,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;SAEtB,CAAC;yCAOgB,+DAAU;YACT,8DAAc;YACb,sDAAM;YACD,kEAAW;OATvB,cAAc,CAqC1B;IAAD,qBAAC;CAAA;AArC0B;;;;;;;;;;;;ACX3B,sCAAsC,mCAAmC,QAAQ,wBAAwB,oBAAoB,KAAK,C;;;;;;;;;;;ACAlI,sUAAsU,YAAY,8f;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhS;AACA;AACO;AAES;AAC1B;AAOxC;IAGE,4BACU,IAAgB,EAChB,MAAc,EACd,eAAgC;QAFhC,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAL1C,cAAS,GAAoB,EAAE,CAAC;IAM5B,CAAC;IAEL,qCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,iCAAI,GAAJ;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAAO,CAAC,YAAY,CAAC,CAAC,SAAS,CAAE,UAAC,KAAsB;YACpE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAI,GAAJ,UAAK,MAAM;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,gCAAG,GAAH,UAAI,IAAI;QAAR,iBAIC;QAHC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAO,CAAC,YAAY,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC,SAAS,CAAC;YAC5D,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IA5BU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAKgB,+DAAU;YACR,sDAAM;YACG,0EAAe;OAN/B,kBAAkB,CA6B9B;IAAD,yBAAC;CAAA;AA7B8B;;;;;;;;;;;;ACZ/B,2BAA2B,sBAAsB,OAAO,C;;;;;;;;;;;ACAxD,2D;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AACO;AAEY;AAerE;IAKE,2BACU,IAAgB,EAChB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAHhC,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAExC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAEF,oCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,gCAAI,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,KAAK;aACT,MAAM;aACN,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACxD,EAAE,EAAC,KAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,EAAC;gBAC/B,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YACvB,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IA3BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOgB,+DAAU;YACT,8DAAc;YACb,sDAAM;YACG,0EAAe;OAT/B,iBAAiB,CA4B7B;IAAD,wBAAC;CAAA;AA5B6B;;;;;;;;;;;;ACnB9B,mB;;;;;;;;;;;ACAA,kGAAkG,eAAe,oBAAoB,eAAe,+F;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlG;AAEO;AAEY;AAO1B;AAEkB;AAO7D;IAIE,wBACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAHhC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAExC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACjB,CAAC;IAEF,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,6BAAI,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,KAAK;aACT,MAAM;aACN,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACxD,EAAE,EAAC,KAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,EAAC;gBAC/B,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YACvB,CAAC;YACD,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kCAAS,GAAjB;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,gDAAO,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiB;YAC5F,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,mCAAU,GAAjB,UAAkB,EAAE;QAApB,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gDAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC;YACzD,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAvCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAMuB,kEAAW;YACjB,8DAAc;YACb,sDAAM;YACG,0EAAe;OAR/B,cAAc,CAwC1B;IAAD,qBAAC;CAAA;AAxC0B;;;;;;;;;;;;ACpB3B,mB;;;;;;;;;;;ACAA,2TAA2T,eAAe,uEAAuE,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/V;AACa;AACN;AAEY;AAO1B;AAEkB;AAO7D;IAOE,yBACU,IAAgB,EAChB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAJhC,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QATnC,eAAU,GAAG;YAClB,SAAS,EAAE,gDAAO,CAAC,OAAO;SAC3B,CAAC;QASA,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,CAAC;IAEF,kCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,8BAAI,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,KAAK;aACT,MAAM;aACN,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACxD,EAAE,EAAC,KAAI,CAAC,IAAI,CAAC,MAAM,IAAI,SAAS,CAAC,EAAC;gBAChC,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACxB,CAAC;YACD,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACO,oCAAU,GAAlB,UAAmB,IAAc;QAAjC,iBAIC;QAFC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI,IAAM,KAAI,CAAC,SAAS,EAAE,CAAC,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,yCAAe,GAAf,UAAgB,SAAS;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC;YACrB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEO,mCAAS,GAAjB;QACE,yGAAyG;QACzG,sBAAsB;QACtB,MAAM;IACR,CAAC;IAEM,oCAAU,GAAjB,UAAkB,KAAK;QAAvB,iBASC;QARC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;QAE5C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gDAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC;YAE7D,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAClC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,CAAC,CAAC,CAAC;IACL,CAAC;IA7DU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCASgB,+DAAU;YACH,kEAAW;YACjB,8DAAc;YACb,sDAAM;YACG,0EAAe;OAZ/B,eAAe,CA8D3B;IAAD,sBAAC;CAAA;AA9D2B;;;;;;;;;;;;ACpB5B,mB;;;;;;;;;;;ACAA,kcAAkc,oBAAoB,qcAAqc,eAAe,uBAAuB,aAAa,2BAA2B,UAAU,2BAA2B,uBAAuB,mIAAmI,YAAY,gBAAgB,eAAe,sEAAsE,eAAe,uBAAuB,gBAAgB,gBAAgB,uBAAuB,+EAA+E,eAAe,+BAA+B,UAAU,qCAAqC,YAAY,yIAAyI,eAAe,uBAAuB,gBAAgB,QAAQ,uBAAuB,kFAAkF,eAAe,+BAA+B,UAAU,qCAAqC,YAAY,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr5D;AACA;AACO;AAEY;AAE1B;AACC;AAS5C;IAQE,wBACU,IAAgB,EAChB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAHhC,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QARlC,eAAU,GAAG,EAAE,CAAC;QAChB,oBAAe,GAAG,EAAE,CAAC;IAQzB,CAAC;IAEL,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,6BAAI,GAAZ;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK;aACP,MAAM;aACN,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC7B,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,qCAAY,GAApB,UAAqB,EAAE;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAEM,+CAAsB,GAA7B,UAA8B,IAAU;QACtC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IACxC,CAAC;IAEM,4CAAmB,GAA1B,UAA2B,IAAU;QACnC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAEM,iCAAQ,GAAf,UAAgB,OAAO,EAAE,MAAM;QAC7B,IAAI,IAAI,GAAG,IAAI,iDAAI,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,yBAAyB;QAC5D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEM,mCAAU,GAAjB,UAAkB,KAAK;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEO,sCAAa,GAArB;QAAA,iBAkDC;QAjDC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBACrB,KAAI,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YAC1B,IAAI,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YAChD,KAAI,CAAC,UAAU,IAAI,MAAM;QAC3B,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE/D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YAC1B,IAAI,WAAW,GAAG;gBAChB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,WAAW,EAAE,CAAC;gBACd,IAAI,EAAE,EAAE;aACT,CAAC;YAEF,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;oBAErC,IAAI,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChD,IAAI,eAAe,GAAG,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBACtD,WAAW,CAAC,WAAW,IAAI,eAAe,CAAC;oBAE3C,IAAI,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAG,IAAM,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC,CAAC;oBAEzF,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACZ,OAAO,CAAC,MAAM,IAAI,eAAe,CAAC;wBAClC,MAAM,CAAC;oBACT,CAAC;oBAED,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;wBACpB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;wBAC3B,MAAM,EAAE,eAAe;qBACxB,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,0CAAiB,GAAzB;QAAA,iBAqEC;QApEC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBACrB,KAAI,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YAC1B,IAAI,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YAChD,KAAI,CAAC,UAAU,IAAI,MAAM;QAC3B,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE/D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YAC1B,IAAI,WAAW,GAAG;gBAChB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,WAAW,EAAE,KAAI,CAAC,aAAa;gBAC/B,WAAW,EAAE,KAAI,CAAC,aAAa;gBAC/B,IAAI,EAAE,EAAE;aACT,CAAC;YAEF,IAAI,aAAa,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI,IAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;YACzF,aAAa,CAAC,OAAO,CAAC,cAAI;gBACxB,WAAW,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC;YACzC,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,WAAC;YAC5B,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,SAAS,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,YAAE,IAAM,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,WAAW,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;gBACpG,SAAS,CAAC,OAAO,CAAC,WAAC;oBACjB,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;wBAEtB,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;wBACzC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;4BACd,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,WAAW,CAAC;4BAC/B,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,WAAW,CAAC;4BAC/B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;gCACV,IAAI,EAAE,CAAC,CAAC,IAAI;gCACZ,MAAM,EAAE,CAAC,CAAC,WAAW;6BACtB,CAAC,CAAC;4BACH,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;wBACpB,CAAC;wBACD,IAAI,CAAC,CAAC;4BACJ,IAAI,iBAAiB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;4BAC7C,CAAC,CAAC,WAAW,IAAI,iBAAiB,CAAC;4BACnC,CAAC,CAAC,WAAW,IAAI,iBAAiB,CAAC;4BACnC,CAAC,CAAC,WAAW,IAAI,iBAAiB,CAAC;4BACnC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;gCACV,IAAI,EAAE,CAAC,CAAC,IAAI;gCACZ,MAAM,EAAE,iBAAiB;6BAC1B,CAAC,CAAC;wBACL,CAAC;oBAEH,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGO,mCAAU,GAAlB,UAAmB,IAAc;QAAjC,iBAQC;QANC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACxD,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjC,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IA3LU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAUgB,+DAAU;YACT,8DAAc;YACb,sDAAM;YACG,0EAAe;OAZ/B,cAAc,CA4L1B;IAAD,qBAAC;CAAA;AA5L0B;;;;;;;;;;;;AChB3B,2BAA2B,oBAAoB,KAAK,4BAA4B,mBAAmB,yBAAyB,qCAAqC,QAAQ,8BAA8B,iBAAiB,KAAK,C;;;;;;;;;;;ACA7N,yHAAyH,gOAAgO,gMAAgM,4LAA4L,mBAAmB,8aAA8a,cAAc,2jCAA2jC,eAAe,uDAAuD,8CAA8C,OAAO,IAAI,YAAY,IAAI,WAAW,gXAAgX,6DAA6D,oEAAoE,oNAAoN,mBAAmB,OAAO,mBAAmB,6EAA6E,0EAA0E,YAAY,4EAA4E,WAAW,UAAU,sBAAsB,ytBAAytB,kBAAkB,gFAAgF,8NAA8N,mBAAmB,OAAO,mBAAmB,oiBAAoiB,6BAA6B,IAAI,6BAA6B,0wB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3/J;AACa;AACN;AAEY;AACzB;AAMD;AAEkB;AAU7D;IAQE,2BACU,IAAgB,EAChB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAJhC,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QATlC,eAAU,GAAG;YACnB,OAAO,EAAE,gDAAO,CAAC,OAAO;SACzB,CAAC;IAQE,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,gCAAI,GAAJ;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK;aACP,MAAM;aACN,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,uCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,4CAAgB,GAAhB;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1C,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,2BAA2B;IAC3B,mDAAmD;IACnD,IAAI;IAEJ,kDAAsB,GAAtB,UAAuB,OAAwB;QAC7C,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;IACpC,CAAC;IAED,iDAAqB,GAArB,UAAsB,OAAa,EAAE,KAAK;QACxC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC;QAGvC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,mCAAmC;QACnC,yBAAyB;IAC3B,CAAC;IAED,0CAAc,GAAd,UAAe,IAAU;QACvB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,mCAAO,GAAP,UAAQ,IAAU,EAAE,IAAI;QAAxB,iBASC;QARC,IAAI,OAAO,GAAG,IAAI,iDAAI,EAAE,CAAC;QACzB,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qBAAW;YAC1D,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAC1B,CAAC,CAAC,CAAC;QAAA,CAAC;IACN,CAAC;IAED,sCAAU,GAAV,UAAW,IAAU;QACnB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,sCAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,wCAAY,GAAZ,UAAa,MAAM;QAAnB,iBASC;QARC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,gDAAO,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,KAAkB;gBAE7F,KAAK,CAAC,OAAO,CAAC,cAAI;oBAChB,KAAI,CAAC,IAAI,CAAC,KAAK;gBACjB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,0CAAc,GAAd,UAAe,QAAgB;QAC7B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAED,wCAAY,GAAZ,UAAa,IAAU;QACrB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAxGU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAUgB,+DAAU;YACH,kEAAW;YACjB,8DAAc;YACb,sDAAM;YACG,0EAAe;OAb/B,iBAAiB,CAyG7B;IAAD,wBAAC;CAAA;AAzG6B;;;;;;;;;;;;ACvB9B,sCAAsC,2BAA2B,KAAK,C;;;;;;;;;;;ACAtE,4MAA4M,YAAY,isCAAisC,YAAY,mc;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn3C;AAIA;AACgB;AACT;AAOzD;IAIE,+BAAoB,eAAkC,EAC5C,eAAgC,EAChC,KAAqB,EACrB,MAAc;QAHJ,oBAAe,GAAf,eAAe,CAAmB;QAC5C,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,wCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK;aACT,MAAM;aACN,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,0CAAU,GAAV,UAAW,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IACD,kDAAkB,GAAlB;QACE,uJAAuJ;QACvJ,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;IACvC,CAAC;IA5BU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAKqC,+DAAiB;YAC3B,0EAAe;YACzB,8DAAc;YACb,sDAAM;OAPb,qBAAqB,CA6BjC;IAAD,4BAAC;CAAA;AA7BiC;;;;;;;;;;;;ACblC,2BAA2B,sBAAsB,OAAO,C;;;;;;;;;;;ACAxD,utBAAutB,eAAe,iBAAiB,KAAK,IAAI,YAAY,6C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1tB;AACA;AACO;AAEY;AAerE;IAKE,wBACU,IAAgB,EAChB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAHhC,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAExC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAEF,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,6BAAI,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,KAAK;aACT,MAAM;aACN,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACxD,EAAE,EAAC,KAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,EAAC;gBAC/B,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YACvB,CAAC;YACD,KAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,qCAAY,GAApB;QACE,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC;QAExC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAvCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAOgB,+DAAU;YACT,8DAAc;YACb,sDAAM;YACG,0EAAe;OAT/B,cAAc,CAwC1B;IAAD,qBAAC;CAAA;AAxC0B;;;;;;;;;;;;ACnB3B,mB;;;;;;;;;;;ACAA,2CAA2C,YAAY,iK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAL;AACA;AACO;AAEY;AAE1B;AAO3C;IAIE,wBACU,IAAgB,EAChB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAHhC,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;IACvC,CAAC;IAEJ,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,6BAAI,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK;aACT,MAAM;aACN,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL;QAAA,iBAIC;QAHC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC;YACvF,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,mCAAU,GAAlB;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAAO,CAAC,YAAY,CAAC,CAAC,SAAS,CAAE,UAAC,KAAsB;YAClE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAnCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAMgB,+DAAU;YACT,8DAAc;YACb,sDAAM;YACG,0EAAe;OAR/B,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;ACb3B,2BAA2B,sBAAsB,OAAO,C;;;;;;;;;;;ACAxD,wMAAwM,YAAY,0HAA0H,YAAY,iFAAiF,sCAAsC,YAAY,IAAI,WAAW,+YAA+Y,kBAAkB,4DAA4D,qsBAAqsB,eAAe,mCAAmC,YAAY,MAAM,YAAY,uoBAAuoB,4BAA4B,uBAAuB,mjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt2E;AACA;AACO;AAEY;AAG1B;AACkB;AAQ7D;IAKE,6BACU,IAAgB,EAChB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAJhC,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;IACtC,CAAC;IAEL,sCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,kCAAI,GAAJ;QAAA,iBASC;QARC,IAAI,CAAC,KAAK;aACP,MAAM;aACN,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC;gBACjC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAM,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;YAC3E,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,wCAAU,GAAV,UAAW,IAAU;QACnB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,yCAAW,GAAX,UAAY,OAAa;QACvB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;IAC9B,CAAC;IAED,iDAAmB,GAAnB,UAAoB,IAAU;QAC5B,2BAA2B;QAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,qBAAqB;QACrB,+CAA+C;QAE/C,iBAAiB;QACjB,gEAAgE;QAChE,uCAAuC;QACvC,6BAA6B;QAC7B,6CAA6C;QAC7C,iDAAiD;QACjD,MAAM;IACR,CAAC;IAGD,kDAAoB,GAApB,UAAqB,KAAkB;QACrC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI,IAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAU,EAAE,KAAK;QAEvB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,wCAAU,GAAV,UAAW,KAAK,EAAE,IAAU;QAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IACD,0CAAY,GAAZ,UAAa,MAAM;QAAnB,iBASC;QARC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,gDAAO,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,KAAkB;gBAE7F,KAAK,CAAC,OAAO,CAAC;oBACZ,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAClB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,4CAAc,GAAd,UAAe,QAAQ,EAAE,IAAI;QAE3B,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAClB,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE9C,CAAC;IAjGU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAOgB,+DAAU;YACH,kEAAW;YACjB,8DAAc;YACb,sDAAM;YACG,0EAAe;OAV/B,mBAAmB,CAmG/B;IAAD,0BAAC;CAAA;AAnG+B;;;;;;;;;;;;AChBhC,qmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACvB;AACwB;AACR;AACV;AAMxC;IAKE,2BACU,IAAgB,EAChB,KAAqB,EACrB,MAAc,EACd,WAAwB;QAHxB,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAChC,CAAC;IAEH,oCAAQ,GAAR;QACE,aAAa;QACb,eAAe;QACf,yCAAyC;QACzC,yBAAyB;QACzB,qCAAqC;QACrC,eAAe;QACf,8CAA8C;QAC9C,2CAA2C;QAC3C,MAAM;QAEN,MAAM;IACR,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAYC;QAXC,+DAA+D;QAC/D,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAO,CAAC,WAAW,EAAE,OAAO,CAAC;aAC3C,SAAS,CAAC,UAAC,IAAS;YAEnB,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAtCU,iBAAiB;QAJ7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;SAEzB,CAAC;yCAOgB,+DAAU;YACT,8DAAc;YACb,sDAAM;YACD,kEAAW;OATvB,iBAAiB,CAuC7B;IAAD,wBAAC;CAAA;AAvC6B;;;;;;;;;;;;ACX9B,mB;;;;;;;;;;;ACAA,mJAAmJ,OAAO,olB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxG;AACQ;AACjB;AAOzC;IAIE,wBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFpE,UAAK,GAAG,SAAS,CAAC;IAEsD,CAAC;IAEzE,iCAAQ,GAAR;QAEE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAC;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAXU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKiC,kEAAW,EAAkB,sDAAM;OAJzD,cAAc,CAY1B;IAAD,qBAAC;CAAA;AAZ0B;;;;;;;;;;;;;;;;;;;;;;ACTgB;AAG3C;IAAA;IAWA,CAAC;IARU,oCAAc,GAArB,UAAsB,KAAa;QAC/B,cAAc,CAAC,OAAO,CAAC,cAAc,EAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAEM,oCAAc,GAArB;QACI,IAAI,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACnD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAVQ,WAAW;QADvB,gEAAU,EAAE;OACA,WAAW,CAWvB;IAAD,kBAAC;CAAA;AAXuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHmB;AAC3C,0DAA0D;AACK;AAC/D,uCAAuC;AACR;AAO/B;IACI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,4BAAM,GAAN,UAAO,GAAG,EAAE,QAAQ;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAEzC,CAAC;IACD,sCAAgB,GAAhB,UAAiB,GAAG,EAAE,MAAM;QACxB,GAAG,GAAG,GAAG,GAAG,UAAU,GAAG,MAAM,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1B;;;;;;;;;;;;;;;UAeE;IACN,CAAC;IACD,gCAAU,GAAV,UAAW,GAAG,EAAE,MAAM;QAClB,GAAG,IAAI,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAU;QAAvB,iBASC;QARG,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAClC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9E,sEAAsE;YACtE,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;YAC3D,qDAAqD;YACrD,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8BAAQ,GAAhB,UAAiB,OAAO,EAAE,QAAQ;QAC9B,4EAA4E;QAC5E,6CAA6C;QAC7C,2DAA2D;QAE3D,6DAA6D;QAC7D,kDAAkD;QAClD,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAC3C,MAAM,CAAC;QACX,CAAC;QAED,iCAAiC;QACjC,oEAAoE;QACpE,+BAA+B;QAC/B,0CAA0C;QAC1C,IAAI;QACJ,iCAAiC;QACjC,IAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC1B,MAAM,CAAC;QAEP,uBAAuB;QACvB,+DAA+D;QAE/D,oDAAoD;QACpD,0CAA0C;QAC1C,oBAAoB;QACpB,0BAA0B;QAC1B,gBAAgB;QAChB,yBAAyB;QACzB,mEAAmE;QACnE,wCAAwC;QACxC,qCAAqC;QACrC,WAAW;IACf,CAAC;IA9EQ,WAAW;QADvB,gEAAU,EAAE;yCAEiB,+DAAU;OAD3B,WAAW,CA+EvB;IAAD,kBAAC;CAAA;AA/EuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AAEN;AACO;AACH;AAGzC;IACE,gCAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,0CAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBAcC;QAbC,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAChD,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,2CAA2C;QAC3C,IAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC,EAAC,CAAC,CAAC;QACnF,8DAA8D;QAC9D,MAAM,CAAC,IAAI;aACR,MAAM,CAAC,OAAO,CAAC;aACf,KAAK,CAAC,UAAC,GAAQ,EAAE,MAAM;YACtB,EAAE,EAAC,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;gBACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,kDAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8CAAa,GAArB,UAAsB,KAAa;QAC/B,MAAM,CAAC,YAAU,KAAO,CAAC;IAC7B,CAAC;IArBU,sBAAsB;QADlC,gEAAU,EAAE;yCAEsB,yDAAW,EAAkB,sDAAM;OADzD,sBAAsB,CAuBlC;IAAD,6BAAC;CAAA;AAvBkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPQ;AAEO;AACb;AAGS;AAI9C;IAEI,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,sCAAY,GAAnB,UAAoB,SAA0B;QAC1C,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;IACnE,CAAC;IAEM,qCAAW,GAAlB,UAAmB,QAAkB;QAArC,iBAgBC;QAfG,IAAI,OAAO,GAAG,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;YAChD,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,SAA0B;gBAE/D,2BAA2B;gBAC3B,+CAA+C;gBAC/C,gCAAgC;gBAChC,2CAA2C;gBAC3C,mCAAmC;gBACnC,QAAQ;gBACR,IAAI;gBACJ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC7B,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEM,sCAAY,GAAnB;QACI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEM,qCAAW,GAAlB,UAAmB,EAAU;QACzB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,QAAQ,CAAC;QACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC;oBAC9B,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;gBACxB,CAAC;gBACD,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC;oBAC9B,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;gBACxB,CAAC;gBACD,MAAM,CAAC,QAAQ,CAAC;YACpB,CAAC;QACL,CAAC;IACL,CAAC;IAEM,wCAAc,GAArB,UAAsB,IAAU;QAC5B,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBACnB,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IAEM,oCAAU,GAAjB,UAAkB,IAAI;QAClB,2EAA2E;QAC3E,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC;IACL,CAAC;IAEM,iCAAO,GAAd,UAAe,IAAc,EAAE,IAAU;QAGrC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACZ,mCAAmC;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QAED,wCAAwC;IAC5C,CAAC;IAEM,wCAAc,GAArB,UAAsB,IAAc,EAAE,QAAgB;QAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACpB,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,4CAAkB,GAAzB,UAA0B,IAAc,EAAE,KAAa;QACnD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEO,wCAAc,GAAtB,UAAuB,IAAc;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAEO,8CAAoB,GAA5B,UAA6B,IAAc,EAAE,IAAU;QAAvD,iBAiDC;QAhDG,wDAAwD;QACxD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAExB,IAAI,UAAQ,CAAC;YACb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACZ,mCAAmC;gBACnC,UAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACjD,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,mCAAmC;gBACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACzC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;wBAChC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACR,UAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC7B,KAAK,CAAC;wBACV,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,UAAQ,CAAC,CAAC,CAAC;gBAEX,IAAI,GAAG,GAAG,gDAAO,CAAC,iBAAiB,GAAG,YAAY,GAAG,UAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,YAAY,GAAG,UAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAClH,GAAG,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;gBACvE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,IAAgB;oBAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACjD,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjC,IAAI,QAAQ,GAAG,IAAI,yDAAQ,EAAE,CAAC;wBAC9B,QAAQ,CAAC,QAAQ,GAAG;4BAChB,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;4BAC1B,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK;yBAC/B,CAAC;wBACF,QAAQ,CAAC,QAAQ,GAAG;4BAChB,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;4BAC1B,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK;yBAC/B,CAAC;wBACF,UAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACjC,CAAC;oBAED,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;IA9IQ,eAAe;QAD3B,gEAAU,EAAE;yCAGiB,+DAAU;OAF3B,eAAe,CA+I3B;IAAD,sBAAC;CAAA;AA/I2B;;;;;;;;;;;;;ACV5B;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  MatAutocompleteModule, \r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatListModule,\r\n  MatTabsModule,\r\n  MatGridListModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n} from '@angular/material';\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthGuard } from './auth.guard';\r\n\r\nimport { AppComponent } from './app/app.component';\r\nimport { StartComponent } from './pages/start/start.component';\r\nimport { PlanningsComponent } from './pages/plannings/plannings.component';\r\nimport { PlanoverviewComponent } from './pages/planoverview/planoverview.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport {AuthService} from './services/auth.service'\r\nimport { HttpInterceptorService } from './services/httpInterceptor.service';\r\nimport { PlanningService } from './services/planning.service';\r\nimport { Configs } from './configs';\r\nimport { OverviewComponent } from './pages/planoverview/overview/overview.component';\r\nimport { RouteComponent } from './pages/planoverview/route/route.component';\r\nimport { CalendarComponent } from './pages/planoverview/calendar/calendar.component';\r\nimport { FileUploadComponent } from './components/fileupload/file-upload.component';\r\nimport { FileService } from './services/file.service';\r\nimport { FilesComponent } from './pages/planoverview/files/files.component';\r\nimport { ShareComponent } from './pages/planoverview/share/share.component';\r\nimport { MoneyComponent } from './pages/planoverview/money/money.component';\r\nimport { PlacesInputComponent } from './components/places-input/places-input.component';\r\nimport { StepDetailComponent } from './pages/planoverview/stepdetail/stepdetail.component';\r\nimport { ImagesComponent } from './pages/planoverview/images/images.component';\r\nimport { HttpSrcDirective } from './directives/httpSrc/httpSrc.directive';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { PlanFilesComponent } from './components/plan-files/plan-files.component';\r\nimport { StepFilesComponent } from './components/step-files/step-files.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileUploadComponent,\r\n    PlacesInputComponent,\r\n    PlanFilesComponent,\r\n    StepFilesComponent,\r\n    \r\n    HttpSrcDirective,\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    StartComponent,\r\n    PlanningsComponent,\r\n    PlanoverviewComponent,\r\n    StepDetailComponent,\r\n    OverviewComponent,\r\n    RouteComponent,\r\n    CalendarComponent,\r\n    FilesComponent,\r\n    ImagesComponent,\r\n    ShareComponent,\r\n    MoneyComponent\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    \r\n    MatAutocompleteModule, MatInputModule, \r\n    MatFormFieldModule,MatDatepickerModule,\r\n    MatNativeDateModule,MatCardModule,\r\n    MatButtonModule,MatListModule,\r\n    MatTabsModule, MatGridListModule,\r\n    MatToolbarModule, MatIconModule,\r\n    \r\n    FormsModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: Configs.mapsApiKey\r\n    })\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AuthService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpInterceptorService,\r\n      multi: true\r\n    },\r\n    PlanningService,\r\n    FileService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { StartComponent } from './pages/start/start.component';\nimport { PlanningsComponent } from './pages/plannings/plannings.component';\nimport { PlanoverviewComponent } from './pages/planoverview/planoverview.component';\n\nimport { AuthGuard } from './auth.guard';\nimport { LoginComponent } from './pages/login/login.component';\nimport { OverviewComponent } from './pages/planoverview/overview/overview.component';\nimport { RouteComponent } from './pages/planoverview/route/route.component';\nimport { ShareComponent } from './pages/planoverview/share/share.component';\nimport { StepDetailComponent } from './pages/planoverview/stepdetail/stepdetail.component';\nimport { ImagesComponent } from './pages/planoverview/images/images.component';\nimport { RegisterComponent } from './pages/register/register.component';\n\n\nconst appRoutes : Routes = [\n  {\n    path: '',\n    component: StartComponent,\n    pathMatch: 'full'\n  },{\n    path: 'callback',\n    component: LoginComponent,\n    pathMatch: 'full'\n  },{\n    path: 'register',\n    component: RegisterComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'plannings',\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n    component: PlanningsComponent\n  },\n  {\n    path: 'planoverview/:id',\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n    component: PlanoverviewComponent\n  },\n  {\n    path: 'share/:id',\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n    component: ShareComponent\n  },\n  {\n    path: 'stepdetails/:planid/:stepid',\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n    component: StepDetailComponent\n  },\n  {\n    path: 'images/:id',\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n    component: ImagesComponent\n  },\n  // {\n  //   path: 'planoverview/route',\n  //   pathMatch: 'full',\n  //   canActivate: [AuthGuard],\n  //   component: RouteComponent\n  // },\n]\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    )\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule  { }\n","module.exports = \"\\r\\n\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(){}\n}\n","import { Injectable }     from '@angular/core';\r\nimport { CanActivate, Router }    from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router){}\r\n\r\n  canActivate() {\r\n    if(this.authService.getAccessToken()){\r\n      return true;\r\n    }\r\n    this.router.navigate(['']);\r\n    return false;\r\n  }\r\n}","module.exports = \".error{ color: #f00; }\\r\\n.dragarea{\\r\\n    font-size: 20px;\\r\\n    border: 3px solid #bbb; \\r\\n    padding: 20px ;\\r\\n    background-color: #fff;\\r\\n    color: #bbb;\\r\\n}\\r\\n.dragarea a{\\r\\n    font-size: 14px;\\r\\n}\\r\\n.droparea{\\r\\n    font-size: 20px;\\r\\n    border: 3px dashed #bbb; \\r\\n    padding: 20px ;\\r\\n    background-color: #eff;\\r\\n    color: #aaa;\\r\\n}\"","module.exports = \"<div draggable=\\\"true\\\" ngClass=\\\"{{dragAreaClass}}\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 text-center\\\">\\r\\n            {{infoText}}\\r\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"file.click()\\\">\\r\\n                (Or click to browse)\\r\\n            </a>\\r\\n            <input type=\\\"file\\\" #file [multiple]=\\\"(maxFiles > 1)\\\" (change)=\\\"onFileChange($event)\\\" style=\\\"display:none\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"row error\\\" *ngIf=\\\"errors.length > 0\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let err of errors\\\">{{err}}</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { FileService } from '../../services/file.service';\r\nimport { Configs } from '../../configs';\r\n\r\n@Component({\r\n    selector: 'app-file-upload',\r\n    styleUrls: ['./file-upload.component.css'],\r\n    templateUrl: './file-upload.component.html'\r\n})\r\nexport class FileUploadComponent implements OnInit {\r\n    errors: Array<string> = [];\r\n    dragAreaClass: string = 'dragarea';\r\n    @Input() plan: string;\r\n    @Input() infoText: string;\r\n    @Input() url: string;\r\n    @Input() fileExt: string = \"JPG, GIF, PNG, PDF\";\r\n    @Input() maxFiles: number = 5;\r\n    @Input() maxSize: number = 5; // 5MB\r\n    @Output() saveCallback = new EventEmitter();\r\n    @Output() uploadStatus = new EventEmitter();\r\n\r\n    constructor(private fileService: FileService) { }\r\n\r\n    ngOnInit() { \r\n        if(!this.infoText){\r\n            this.infoText = \"Drag & Drop to upload your files\";\r\n        }\r\n    }\r\n\r\n    onFileChange(event) {\r\n        let files = event.target.files;\r\n        this.saveFiles(files);\r\n    }\r\n\r\n    @HostListener('dragover', ['$event']) onDragOver(event) {\r\n        this.dragAreaClass = \"droparea\";\r\n        event.preventDefault();\r\n    }\r\n\r\n    @HostListener('dragenter', ['$event']) onDragEnter(event) {\r\n        this.dragAreaClass = \"droparea\";\r\n        event.preventDefault();\r\n    }\r\n\r\n    @HostListener('dragend', ['$event']) onDragEnd(event) {\r\n        this.dragAreaClass = \"dragarea\";\r\n        event.preventDefault();\r\n    }\r\n\r\n    @HostListener('dragleave', ['$event']) onDragLeave(event) {\r\n        this.dragAreaClass = \"dragarea\";\r\n        event.preventDefault();\r\n    }\r\n\r\n    @HostListener('drop', ['$event']) onDrop(event) {\r\n        this.dragAreaClass = \"dragarea\";\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        var files = event.dataTransfer.files;\r\n        this.saveFiles(files);\r\n    }\r\n\r\n    saveFiles(files) {\r\n        this.errors = []; // Clear error\r\n        // Validate file size and allowed extensions\r\n        if (files.length > 0 && (!this.isValidFiles(files))) {\r\n            this.uploadStatus.emit(false);\r\n            return;\r\n        }\r\n        if (files.length > 0) {\r\n            let formData: FormData = new FormData();\r\n            for (var j = 0; j < files.length; j++) {\r\n                formData.append(\"file\"+j, files[j], files[j].name);\r\n            }\r\n            // todo:\r\n            // formData.append(\"projectid\", myval);\r\n            formData.append(\"plan\", this.plan);\r\n            formData.append(\"url\", Configs.fileUrl);\r\n            \r\n            this.fileService.upload(this.url, formData)\r\n                .subscribe(\r\n                success => {\r\n                    this.uploadStatus.emit(true);\r\n                    this.saveCallback.emit(success);\r\n                    console.log(success)\r\n                },\r\n                error => {\r\n                    this.uploadStatus.emit(false);\r\n                    this.errors.push(error.ExceptionMessage);\r\n                })\r\n        }\r\n    }\r\n\r\n    private isValidFiles(files) {\r\n        // Check Number of files\r\n        if (files.length > this.maxFiles) {\r\n            this.errors.push(\"Error: At a time you can upload only \" + this.maxFiles + \" files\");\r\n            return;\r\n        }\r\n        this.isValidFileExtension(files);\r\n        return this.errors.length === 0;\r\n    }\r\n\r\n    private isValidFileExtension(files) {\r\n        // Make array of file extensions\r\n        var extensions = (this.fileExt.split(','))\r\n            .map(function (x) { return x.toLocaleUpperCase().trim() });\r\n        for (var i = 0; i < files.length; i++) {\r\n            // Get file extension\r\n            var ext = files[i].name.toUpperCase().split('.').pop() || files[i].name;\r\n            // Check the extension exists\r\n            var exists = extensions.includes(ext);\r\n            if (!exists) {\r\n                this.errors.push(\"Error (Extension): \" + files[i].name);\r\n            }\r\n            // Check file size\r\n            this.isValidFileSize(files[i]);\r\n        }\r\n    }\r\n\r\n    private isValidFileSize(file) {\r\n        var fileSizeinMB = file.size / (1024 * 1000);\r\n        var size = Math.round(fileSizeinMB * 100) / 100; // convert upto 2 decimal place\r\n        if (size > this.maxSize)\r\n            this.errors.push(\"Error (File Size): \" + file.name + \": exceed file size limit of \" + this.maxSize + \"MB ( \" + size + \"MB )\");\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-form-field>\\r\\n    <input \\r\\n        matInput \\r\\n        #box\\r\\n        [matAutocomplete]=\\\"suggestList\\\" \\r\\n        (keyup)=\\\"stepKeyUp(box.value);\\\" \\r\\n        type=\\\"text\\\" \\r\\n        placeholder=\\\"{{placeholderInput}}\\\"\\r\\n        value={{inputValue}}\\r\\n        (input)=\\\"inputChange(box.value)\\\"\\r\\n        >\\r\\n</mat-form-field>\\r\\n\\r\\n<!-- [ngModel]=inputValue -->\\r\\n<!-- value={{inputValue}} -->\\r\\n\\r\\n<mat-autocomplete #suggestList=\\\"matAutocomplete\\\" [displayWith]=\\\"displaySuggest\\\">\\r\\n    <mat-option (onSelectionChange)=\\\"suggestlistSelectionChanged(suggest)\\\" *ngFor=\\\"let suggest of suggestlist\\\" [value]=\\\"suggest\\\">\\r\\n        {{ suggest.description }}\\r\\n    </mat-option>\\r\\n</mat-autocomplete>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { Configs } from '../../configs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PlaceSuggestion } from '../../models/PlaceSuggestion';\r\nimport { PlaceDetail } from '../../models/PlaceDetail';\r\nimport { Todo } from '../../models/Todo';\r\n\r\n@Component({\r\n    selector: 'places-input',\r\n    styleUrls: ['./places-input.component.css'],\r\n    templateUrl: './places-input.component.html'\r\n})\r\nexport class PlacesInputComponent implements OnInit {\r\n    errors: Array<string> = [];\r\n    \r\n    private searchTimer:any;\r\n    private suggestlist = [];\r\n    private _inputValue: string;\r\n\r\n    @Input() useGoogle = false;\r\n    @Input() inputValue;\r\n    @Input() placeholderInput: string = \"Where do you wanna stop?\";\r\n    @Output() selectionChanged = new EventEmitter();\r\n    \r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    inputChange(event){\r\n        let todo = new Todo();\r\n        todo.title = event;\r\n        this.selectionChanged.emit(todo);\r\n    }\r\n    \r\n    stepKeyUp(value){\r\n        \r\n        var newTodo = new Todo();\r\n        newTodo.title = value;\r\n        this.selectionChanged.emit(newTodo);\r\n\r\n        if(!this.useGoogle) return;\r\n\r\n        clearTimeout(this.searchTimer);\r\n        this.searchPlaces(value, (suggestlist) => {\r\n            this.suggestlist = suggestlist;\r\n        });\r\n    }\r\n    \r\n    suggestlistSelectionChanged(suggest: PlaceSuggestion){\r\n        this.placeDetails(suggest.place_id, (place : PlaceDetail) => {\r\n            var newTodo = new Todo();\r\n            newTodo.title = suggest.description;\r\n            newTodo.location = place.geometry.location;\r\n            this.selectionChanged.emit(newTodo);\r\n        });\r\n    }\r\n  \r\n    displaySuggest(suggest: PlaceSuggestion){\r\n      return suggest ? suggest.description : suggest;\r\n    }\r\n\r\n    private searchPlaces(query: any, cb: any){\r\n        if(!query){\r\n            return;\r\n        }\r\n        this.searchTimer = setTimeout(() => {\r\n            var url = Configs.placesAutocompleteUrl + '?q=' + encodeURIComponent(query);\r\n            this.http.get(url).subscribe((res: any) => {\r\n                cb(res.predictions);\r\n            });\r\n        }, 2000);\r\n    }\r\n\r\n    private placeDetails(placeid, cb: any){\r\n      let url = Configs.placesDetailsUrl + '?placeid='+placeid;\r\n      this.http.get(url).subscribe((res: any) => {\r\n        cb(res.result);\r\n      });\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div>\\r\\n    <ul *ngIf=\\\"plan.files\\\">\\r\\n        <li *ngFor=\\\"let file of plan.files; let i = index\\\">\\r\\n            <span (click)=\\\"downloadFile(file)\\\">{{i + 1}}. {{file.filename}}</span>\\r\\n            <button mat-raised-button (click)=\\\"deleteFileFromPlan(i)\\\">delete</button>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FileService } from '../../services/file.service';\r\nimport { File } from '../../models/File';\r\nimport { Planning } from '../../models/Planing';\r\nimport { PlanningService } from '../../services/planning.service';\r\n\r\n@Component({\r\n    selector: 'plan-files',\r\n    styleUrls: ['./plan-files.component.css'],\r\n    templateUrl: './plan-files.component.html'\r\n})\r\nexport class PlanFilesComponent implements OnInit {\r\n\r\n    @Input() plan: Planning;\r\n\r\n    constructor(\r\n        private fileService: FileService,\r\n        private planningService: PlanningService\r\n    ) { }\r\n\r\n    ngOnInit() { }\r\n\r\n    downloadFile(file: File) {\r\n        this.fileService.downloadFile(file);\r\n    }\r\n\r\n\r\n    deleteFileFromPlan(index) {\r\n        this.planningService.deleteFileFromPlan(this.plan, index);\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n<div>\\r\\n    <ul *ngIf=\\\"step.files\\\">\\r\\n        <li *ngFor=\\\"let file of step.files; let i = index\\\">\\r\\n            <span (click)=\\\"downloadFile(file)\\\">{{i + 1}}. {{file.filename}}</span> <button (click)=\\\"deleteFileFromStep(i, step)\\\">delete</button>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FileService } from '../../services/file.service';\r\nimport { File } from '../../models/File';\r\nimport { PlanningService } from '../../services/planning.service';\r\nimport { Step } from '../../models/Step';\r\nimport { Planning } from '../../models/Planing';\r\n\r\n@Component({\r\n    selector: 'step-files',\r\n    styleUrls: ['./step-files.component.css'],\r\n    templateUrl: './step-files.component.html'\r\n})\r\nexport class StepFilesComponent implements OnInit {\r\n\r\n    @Input() plan: Planning;\r\n    @Input() step: Step;\r\n\r\n    constructor(\r\n        private fileService: FileService,\r\n        private planningService: PlanningService\r\n    ) { }\r\n\r\n    ngOnInit() { }\r\n\r\n    downloadFile(file: File) {\r\n        this.fileService.downloadFile(file);\r\n    }\r\n\r\n    deleteFileFromStep(index, step) {\r\n        this.findStep(step._id, (step) => {\r\n            step.files.splice(index, 1);\r\n        });\r\n        this.planningService.setPlanning(this.plan);\r\n    }\r\n\r\n\r\n    private findStep(stepid, cb) {\r\n        this.plan.steps.forEach(step => {\r\n            if (step._id == stepid) {\r\n                cb(step);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export class Configs {\r\n\r\n    public static mapsApiKey = 'AIzaSyAcLB4ukiK5M2tuVLK4P2kIyib7vUDt_r8';\r\n    //public static baseUrl = 'http://localhost:4200';\r\n    public static baseUrl = 'https://hidden-taiga-84499.herokuapp.com';\r\n    public static loginUrl = Configs.baseUrl + '/login';\r\n    public static registerUrl = Configs.baseUrl + '/register';\r\n    public static planningsUrl = Configs.baseUrl + '/plannings';\r\n    public static placesAutocompleteUrl = Configs.baseUrl + '/places/autocomplete';\r\n    public static placesSearchUrl = Configs.baseUrl + '/places/search';\r\n    public static placesDetailsUrl = Configs.baseUrl + '/places/details';\r\n    public static placesPhotoUrl = Configs.baseUrl + '/places/photo';\r\n    public static placesDistanceUrl = Configs.baseUrl + '/places/distance';\r\n\r\n    public static fileUrl = Configs.baseUrl + '/file';\r\n    // public static fileGetImagesUrl = Configs.baseUrl + '/file/images';\r\n    \r\n    public static shareUrl = Configs.baseUrl + '/share';\r\n}","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { HttpHeaderResponse, HttpHeaders, HttpClient } from '@angular/common/http';\r\n\r\n@Directive({\r\n  selector: '[httpSrc]'\r\n})\r\nexport class HttpSrcDirective {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private element: ElementRef\r\n  ) {\r\n\r\n    // function revokeObjectURL() {\r\n    //   if (element.nativeElement.objectURL) {\r\n    //     URL.revokeObjectURL(element.nativeElement.objectURL);\r\n    //   }\r\n    // }\r\n    //setTimeout(this.downloadFile, 10)\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.downloadFile();\r\n  }\r\n\r\n  @Input('httpSrc') imageUrl : string;\r\n\r\n  private downloadFile() {\r\n    const headers = new HttpHeaders();\r\n    headers.append('Accept', 'text/plain');\r\n    this.http.get(this.imageUrl, { headers: headers, responseType: 'blob' }).subscribe(resp => {\r\n      const blob = new Blob([resp], { type: resp.type });\r\n      this.element.nativeElement.src = URL.createObjectURL(blob);\r\n    });\r\n  }\r\n\r\n}","import { User } from \"./User\";\r\n\r\nexport class Cost {\r\n    public _id;\r\n    public from: User;\r\n    public for: String;\r\n    public amount: number;\r\n}","\r\nexport class Distance {\r\n    _id: string;\r\n    distance: {text: string, value: number};\r\n    duration: {text: string, value: number};\r\n}","import { Step } from './Step'\r\nimport { File } from './File'\r\nimport { Cost } from './Cost';\r\nimport { User } from './User';\r\n\r\nexport class Planning {\r\n    public _id;\r\n    public title : String;\r\n    public startDate;\r\n    public endDate;\r\n    public comments: Array<String>;\r\n    public steps: Array<Step>;\r\n    public files: Array<File>;\r\n    public images: Array<File>;\r\n    public costs: Array<Cost>;\r\n    public loggedInUser: User;\r\n    public users: Array<User>;\r\n}","import { Todo } from './Todo'\r\nimport { Location } from './Location';\r\nimport { File } from './File';\r\nimport { Distance } from './Distance';\r\n\r\nexport class Step {\r\n    constructor(){\r\n        this.todos = [];\r\n    }\r\n    public _id; \r\n    public title: String;\r\n    public description: String;\r\n    public todos: Array<Todo>;\r\n    public files: Array<File>;\r\n    public location: Location;\r\n    public days: number;\r\n    public order: number;\r\n    public photoUrl: string;\r\n    public distanceNextStep: Distance;\r\n}","import { Location } from \"./Location\";\r\n\r\nexport class Todo {\r\n    public _id;\r\n    public title: String;\r\n    public costs: number;\r\n    public description: String;\r\n    public location: Location;\r\n}","module.exports = \"\\r\\n<h2>It seems you need to login again</h2>\\r\\n\\r\\n<h3>At the moment you can only login with your google account. More Provider will be added soon ...</h3>\\r\\n\\r\\n\\r\\n\\r\\n<h4>Login with E-Mail</h4>\\r\\n<mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"emailAdress\\\" type=\\\"email\\\" placeholder=\\\"Your email adress\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Your password\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-raised-button (click)=\\\"login()\\\">Login</button>\\r\\n\\r\\n\\r\\n<h4><a target=\\\"_self\\\" rel=\\\"noopener\\\" href=\\\"/register\\\">Register with E-Mail</a></h4>\\r\\n\\r\\n\\r\\n<h4><a target=\\\"_self\\\" rel=\\\"noopener\\\" href=\\\"http://localhost:4200/auth/google\\\">Login with Google</a></h4>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Configs } from '../../configs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit{\n  \n  private emailAdress: string;\n  private password: string;\n  \n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ){}\n  \n  ngOnInit(): void {\n    this.route\n    .queryParams\n    .filter(params => params.access_token)\n    .subscribe(params => {\n      var token = params.access_token;\n      if(token){\n        this.authService.setAccessToken(token);\n        this.router.navigate(['plannings']);\n      }\n      \n    });\n  }\n\n  login(){\n    var loginUser = {\n      email: this.emailAdress,\n      password: this.password\n    };\n    this.http.post(Configs.loginUrl, loginUser)\n    .subscribe((resp: any) => {\n      this.authService.setAccessToken(resp.token);\n      this.router.navigate(['plannings']);\n    });\n  }\n}\n","module.exports = \"\\r\\n.mat-grid-tile {\\r\\n    /* border: 1px dotted #bbb; */\\r\\n}\\r\\n\\r\\n.mat-form-field{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n        <span>Your Plannings</span>\\r\\n    </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"2:1\\\">\\r\\n    <mat-grid-tile (click)=\\\"goto(plan._id)\\\" *ngFor=\\\"let plan of plannings\\\">\\r\\n        {{plan.title}}\\r\\n    </mat-grid-tile>\\r\\n</mat-grid-list>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"5em\\\">\\r\\n    <mat-grid-tile colspan=\\\"3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"Name for next trip ..\\\">\\r\\n                </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n\\r\\n    <mat-grid-tile>\\r\\n        <button mat-raised-button (click)=\\\"add(name)\\\">Add</button>\\r\\n    </mat-grid-tile>\\r\\n</mat-grid-list>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Planning } from '../../models/Planing'\nimport { PlanningService } from '../../services/planning.service';\nimport { Configs } from '../../configs';\n\n@Component({\n  selector: 'app-plannings',\n  templateUrl: './plannings.component.html',\n  styleUrls: ['./plannings.component.css']\n})\nexport class PlanningsComponent implements OnInit {\n  plannings: Array<Planning> = [];\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private planningService: PlanningService\n  ) { }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  init(){\n    this.http.get(Configs.planningsUrl).subscribe( (items: Array<Planning>) => {\n      this.planningService.setPlannings(items);\n      this.plannings = items;\n    });\n  }\n\n  goto(planid){\n    this.router.navigate(['planoverview', planid]);\n  }\n\n  add(name) {\n    this.http.post(Configs.planningsUrl, {title: name}).subscribe(() => {\n      this.init();\n    });\n  }\n}\n","module.exports = \"agm-map {\\r\\n    height: 300px;\\r\\n  }\"","module.exports = \"\\r\\n<div>\\r\\n    Todo calendar\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Step } from '../../../models/Step';\r\nimport { Todo } from '../../../models/Todo';\r\nimport { PlaceSuggestion } from '../../../models/PlaceSuggestion';\r\nimport { PlaceSearchResult } from '../../../models/PlaceSearchResult';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { PlaceDetail } from '../../../models/PlaceDetail';\r\nimport { Configs } from '../../../configs';\r\nimport { Location } from '../../../models/Location'\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css']\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n  private plan: Planning;\r\n  public startLocation: Location\r\n  public locations: Array<Location>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) {\r\n    this.locations = [];\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  private init(){\r\n    this.route\r\n    .params\r\n    .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.id);\r\n        if(this.plan.steps == undefined){\r\n          this.plan.steps = [];\r\n        }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n    Todo Files\\r\\n</div>\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let file of files; let i = index;\\\">\\r\\n        <p>{{file.filename}}</p>\\r\\n        <button (click)=\\\"deleteFile(file._id)\\\">delete</button>\\r\\n    </li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Step } from '../../../models/Step';\r\nimport { Todo } from '../../../models/Todo';\r\nimport { PlaceSuggestion } from '../../../models/PlaceSuggestion';\r\nimport { PlaceSearchResult } from '../../../models/PlaceSearchResult';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { PlaceDetail } from '../../../models/PlaceDetail';\r\nimport { Configs } from '../../../configs';\r\nimport { File } from '../../../models/File'\r\nimport { FileService } from '../../../services/file.service';\r\n\r\n@Component({\r\n  selector: 'app-files',\r\n  templateUrl: './files.component.html',\r\n  styleUrls: ['./files.component.css']\r\n})\r\nexport class FilesComponent implements OnInit {\r\n  private plan: Planning;\r\n  public files: Array<File>;\r\n\r\n  constructor(\r\n    private fileService: FileService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) {\r\n    this.files = [];\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  private init(){\r\n    this.route\r\n    .params\r\n    .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.id);\r\n        if(this.plan.steps == undefined){\r\n          this.plan.steps = [];\r\n        }\r\n        this.loadFiles();\r\n    });\r\n  }\r\n  \r\n  private loadFiles(){\r\n    this.fileService.loadFilesForPlan(Configs.fileUrl, this.plan._id).subscribe((res : Array<File>) => {\r\n      this.files = res;\r\n    });\r\n  }\r\n\r\n  public deleteFile(id){\r\n    this.fileService.deleteFile(Configs.fileUrl, id).subscribe(() => {\r\n      this.loadFiles();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-file-upload \\r\\n[(plan)]=\\\"plan._id\\\"\\r\\n(saveCallback)=\\\"addImagesToPlan($event, plan._id)\\\"\\r\\n[url]=\\\"fileupload.fileurl\\\"\\r\\nmaxFiles=\\\"4\\\"\\r\\nmaxSize=\\\"2\\\"\\r\\nfileExt=\\\"JPG, PNG\\\"\\r\\ninfoText=\\\"Drop your images here\\\" >\\r\\n</app-file-upload>\\r\\n\\r\\n<li *ngFor=\\\"let image of plan.images; let i = index;\\\">\\r\\n    <img [httpSrc]=\\\"image.url\\\" height=\\\"200px\\\" width=\\\"200px;\\\" />\\r\\n    <button (click)=\\\"deleteFile(i)\\\">delete</button>\\r\\n</li>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Step } from '../../../models/Step';\r\nimport { Todo } from '../../../models/Todo';\r\nimport { PlaceSuggestion } from '../../../models/PlaceSuggestion';\r\nimport { PlaceSearchResult } from '../../../models/PlaceSearchResult';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { PlaceDetail } from '../../../models/PlaceDetail';\r\nimport { Configs } from '../../../configs';\r\nimport { File } from '../../../models/File'\r\nimport { FileService } from '../../../services/file.service';\r\n\r\n@Component({\r\n  selector: 'app-images',\r\n  templateUrl: './images.component.html',\r\n  styleUrls: ['./images.component.css']\r\n})\r\nexport class ImagesComponent implements OnInit {\r\n  private plan: Planning;\r\n  public images: Array<File>;\r\n  public fileupload = {\r\n    imagesurl: Configs.fileUrl\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private fileService: FileService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) {\r\n    this.images = [];\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  private init(){\r\n    this.route\r\n    .params\r\n    .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.id);\r\n        if(this.plan.images == undefined){\r\n          this.plan.images = [];\r\n        }\r\n        this.loadFiles();\r\n    });\r\n  }\r\n  private updatePlan(plan: Planning){\r\n\r\n    this.planningService.setPlanning(plan);\r\n    this.http.post(Configs.planningsUrl, plan).subscribe((resp) => {this.loadFiles();});\r\n  }\r\n  \r\n  addImagesToPlan(newImages){\r\n    if (!this.plan.images){\r\n      this.plan.images = [];\r\n    }\r\n    this.plan.images = this.plan.images.concat(newImages);\r\n    this.updatePlan(this.plan);\r\n  }\r\n\r\n  private loadFiles(){\r\n    // this.fileService.loadFilesForPlan(Configs.imagesUrl, this.plan._id).subscribe((res : Array<File>) => {\r\n    //   this.files = res;\r\n    // });\r\n  }\r\n\r\n  public deleteFile(index){\r\n    var fileid = this.plan.images[index].fileId;\r\n\r\n    this.fileService.deleteFile(Configs.fileUrl, fileid).subscribe(() => {\r\n\r\n      this.plan.images.splice(index, 1);\r\n      this.updatePlan(this.plan);\r\n      \r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n    Money\\r\\n</div>\\r\\n<div>\\r\\n    <mat-form-field>\\r\\n        <input matInput #fromBox type=\\\"text\\\" placeholder=\\\"From?\\\" [matAutocomplete]=\\\"fromUsers\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-autocomplete #fromUsers=\\\"matAutocomplete\\\" [displayWith]=\\\"displayWithDisplayName\\\">\\r\\n        <mat-option (onSelectionChange)=\\\"fromSelectionChange(user)\\\" *ngFor=\\\"let user of plan.users\\\" [value]=\\\"user\\\">\\r\\n            {{ user.displayName }}\\r\\n        </mat-option>\\r\\n    </mat-autocomplete>\\r\\n    <mat-form-field>\\r\\n        <input matInput #forBox type=\\\"text\\\" placeholder=\\\"What for?\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n        <input matInput #amoutBox type=\\\"number\\\" placeholder=\\\"How much Money?\\\">\\r\\n    </mat-form-field>\\r\\n    <button (click)=\\\"addCosts(forBox.value, amoutBox.value)\\\">Add</button>\\r\\n</div>\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let cost of plan.costs; let i = index;\\\">\\r\\n        <span>{{cost.amount}}</span>\\r\\n        <span>{{cost.for}}</span>\\r\\n        <span>{{cost.from.displayName}}</span>\\r\\n        \\r\\n        <button (click)=\\\"deleteCost(i)\\\">delete</button>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n<span>total costs: {{totalCosts}} (per person: {{costPerPerson}})</span>\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let costShare of costSharesSmart; let i = index;\\\">\\r\\n        <span>{{costShare.name}} needs to pay {{costShare.totalAmount}}:</span>\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let owe of costShare.owes; let i = index;\\\">\\r\\n                <span>{{owe.name}}: </span>\\r\\n                <span>{{owe.amount}}</span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n\\r\\n<!-- <ul>\\r\\n    <li *ngFor=\\\"let costShare of costShares; let i = index;\\\">\\r\\n        <span>{{costShare.name}} owes {{costShare.totalAmount}} to:</span>\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let owe of costShare.owes; let i = index;\\\">\\r\\n                <span>{{owe.name}}: </span>\\r\\n                <span>{{owe.amount}}</span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </li>\\r\\n</ul> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Configs } from '../../../configs';\r\nimport { Cost } from '../../../models/Cost';\r\nimport { User } from '../../../models/User';\r\n\r\n\r\n@Component({\r\n  selector: 'app-money',\r\n  templateUrl: './money.component.html',\r\n  styleUrls: ['./money.component.css']\r\n})\r\nexport class MoneyComponent implements OnInit {\r\n  private plan: Planning;\r\n  private selectedFromUser: User;\r\n  private totalCosts: number;\r\n  private costShares = [];\r\n  private costSharesSmart = [];\r\n  private costPerPerson: number;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.initPlanning(params.id);\r\n        this.calcCostShare();\r\n        this.calcCostSharSmart();\r\n      });\r\n  }\r\n\r\n  private initPlanning(id) {\r\n    this.plan = this.planningService.getPlanning(id);\r\n  }\r\n\r\n  public displayWithDisplayName(user: User) {\r\n    return user ? user.displayName : user;\r\n  }\r\n\r\n  public fromSelectionChange(user: User) {\r\n    this.selectedFromUser = user;\r\n  }\r\n\r\n  public addCosts(whatFor, amount) {\r\n    let cost = new Cost();\r\n    cost.amount = parseFloat(amount);\r\n    cost.for = whatFor;\r\n    cost.from = this.selectedFromUser; //this.plan.loggedInUser;\r\n    this.plan.costs.push(cost);\r\n    this.updatePlan(this.plan);\r\n  }\r\n\r\n  public deleteCost(index) {\r\n    this.plan.costs.splice(index, 1);\r\n    this.updatePlan(this.plan);\r\n  }\r\n\r\n  private calcCostShare() {\r\n    this.costShares = [];\r\n\r\n    this.totalCosts = 0;\r\n\r\n    this.plan.steps.forEach(step => {\r\n      step.todos.forEach(todo => {\r\n        this.totalCosts += todo.costs;\r\n      });\r\n    });\r\n\r\n    this.costPerPerson = 0;\r\n    this.plan.costs.forEach(cost => {\r\n      let amount = parseFloat(cost.amount.toString());\r\n      this.totalCosts += amount\r\n    });\r\n\r\n    \r\n    this.costPerPerson += this.totalCosts / this.plan.users.length;\r\n\r\n    this.plan.users.forEach(user => {\r\n      var currentUser = {\r\n        _id: user._id,\r\n        name: user.displayName,\r\n        totalAmount: 0,\r\n        owes: []\r\n      };\r\n\r\n      this.plan.costs.forEach(cost => {\r\n        if (cost.from._id != currentUser._id) {\r\n\r\n          let amount = parseFloat(cost.amount.toString());\r\n          let amountPerPerson = amount / this.plan.users.length;\r\n          currentUser.totalAmount += amountPerPerson;\r\n\r\n          var oweUser = currentUser.owes.find(owe => { return owe.name == cost.from.displayName });\r\n\r\n          if (oweUser) {\r\n            oweUser.amount += amountPerPerson;\r\n            return;\r\n          }\r\n\r\n          currentUser.owes.push({\r\n            name: cost.from.displayName,\r\n            amount: amountPerPerson\r\n          });\r\n        }\r\n      });\r\n      this.costShares.push(currentUser);\r\n    });\r\n  }\r\n\r\n  private calcCostSharSmart() {\r\n    this.costSharesSmart = [];\r\n\r\n    this.totalCosts = 0;\r\n    \r\n    this.plan.steps.forEach(step => {\r\n      step.todos.forEach(todo => {\r\n        this.totalCosts += todo.costs;\r\n      });\r\n    });\r\n\r\n    this.costPerPerson = 0;\r\n\r\n    this.plan.costs.forEach(cost => {\r\n      let amount = parseFloat(cost.amount.toString());\r\n      this.totalCosts += amount\r\n    });\r\n\r\n    \r\n    this.costPerPerson += this.totalCosts / this.plan.users.length;\r\n\r\n    this.plan.users.forEach(user => {\r\n      var currentUser = {\r\n        _id: user._id,\r\n        name: user.displayName,\r\n        amountToPay: this.costPerPerson,\r\n        totalAmount: this.costPerPerson,\r\n        owes: []\r\n      };\r\n\r\n      var payedFromUser = this.plan.costs.filter(cost => { return cost.from._id == user._id });\r\n      payedFromUser.forEach(cost => {\r\n        currentUser.amountToPay -= cost.amount;\r\n      });\r\n\r\n      this.costSharesSmart.push(currentUser);\r\n    });\r\n\r\n    this.costSharesSmart.forEach(c => {\r\n      if (c.amountToPay < 0) {\r\n        var theothers = this.costSharesSmart.filter(c2 => { return c2._id != c._id && c2.amountToPay > 0 });\r\n        theothers.forEach(o => {\r\n          if (c.amountToPay < 0) {\r\n            \r\n            var test = c.amountToPay + o.amountToPay;\r\n            if (test <= 0) {\r\n              c.amountToPay += o.amountToPay;\r\n              o.totalAmount += o.amountToPay;\r\n              o.owes.push({\r\n                name: c.name,\r\n                amount: o.amountToPay\r\n              });\r\n              o.amountToPay = 0;\r\n            }\r\n            else {\r\n              var theAmoutToGetZero = (-1 * c.amountToPay);\r\n              o.totalAmount += theAmoutToGetZero;\r\n              o.amountToPay -= theAmoutToGetZero;\r\n              c.amountToPay += theAmoutToGetZero;\r\n              o.owes.push({\r\n                name: c.name,\r\n                amount: theAmoutToGetZero\r\n              });\r\n            }\r\n\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private updatePlan(plan: Planning) {\r\n\r\n    this.planningService.setPlanning(plan);\r\n    this.http.post(Configs.planningsUrl, plan).subscribe((resp) => {\r\n      this.initPlanning(this.plan._id);\r\n      this.calcCostShare();\r\n      this.calcCostSharSmart();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"agm-map {\\r\\n  height: 200px;\\r\\n}\\r\\n\\r\\n.overview-container{\\r\\n  padding: 1em;\\r\\n  margin-bottom: 1em;\\r\\n  /* border-left: 3px solid #bbb; */\\r\\n}\\r\\n\\r\\n.mat-input-container {\\r\\n  width: 7em;\\r\\n}\"","module.exports = \"\\r\\n\\r\\n<div class=\\\"overview-container\\\">\\r\\n    <h4>Travelmates</h4>\\r\\n    <div style=\\\"float: left;\\\">\\r\\n        <span *ngFor=\\\"let user of plan.users\\\" >\\r\\n            <img [src]=\\\"user.picture\\\" height=\\\"50\\\" [title]=\\\"user.email\\\" />\\r\\n        </span>\\r\\n    </div>\\r\\n    <button mat-icon-button style=\\\"clear: left;\\\" (click)=\\\"sharePlan()\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"overview-container\\\" >\\r\\n    <h4>Dates</h4>\\r\\n    <div style=\\\"float: left;\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"startDatePicker\\\" [ngModel]=\\\"plan.startDate | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"plan.startDate=$event;startDateChanged();\\\"\\r\\n                placeholder=\\\"Start\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-datepicker-toggle [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"endDatePicker\\\" [ngModel]=\\\"plan.endDate | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"plan.endDate=$event;planChanged();\\\"\\r\\n                placeholder=\\\"End\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-datepicker-toggle [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"plan.files.length > 0\\\" class=\\\"overview-container\\\">\\r\\n    <h4>Flight tickets, car vouchers, etc. </h4>\\r\\n\\r\\n    <plan-files \\r\\n        [(plan)] = \\\"plan\\\"\\r\\n    ></plan-files>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"overview-container\\\">\\r\\n    <h4>The places you will visit</h4>\\r\\n\\r\\n    <places-input\\r\\n        [useGoogle]=\\\"true\\\"\\r\\n        placeholderInput=\\\"Where?\\\"\\r\\n        (selectionChanged)=\\\"placesSelectionChanged($event)\\\"\\r\\n    ></places-input>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"stepDays\\\" type=\\\"number\\\" placeholder=\\\"How many days you wanna stop?\\\">\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button (click)=\\\"addStep(selectedSuggestion, stepDays)\\\">Add</button>\\r\\n\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"plan.steps\\\">\\r\\n        <div *ngFor=\\\"let step of plan.steps; let i = index;\\\">\\r\\n            <!-- <h3 (click)=\\\"step.edit = true;\\\" *ngIf=\\\"!step.edit\\\">\\r\\n                {{i + 1}}. {{step.title}} ({{step.days}} days)\\r\\n            </h3>\\r\\n            <div *ngIf=\\\"step.edit\\\">\\r\\n                <places-input\\r\\n                    placeholderInput=\\\"Where?\\\"\\r\\n                    (selectionChanged)=\\\"placesSelectionUpdate($event, i)\\\"\\r\\n                ></places-input>\\r\\n                <input [(ngModel)]=\\\"step.days\\\" type=\\\"number\\\" (ngModelChange)=\\\"planChanged();\\\" />\\r\\n                <button (click)=\\\"step.edit = false;\\\">Done</button>\\r\\n                <button (click)=\\\"removeStep(i);\\\">Remove</button>\\r\\n            </div> -->\\r\\n            <mat-card>\\r\\n                <mat-card-header>\\r\\n                        <!-- <img mat-card-avatar src=\\\"http://localhost:4200/places/staticmap?lat={{step.location.lat}}&lng={{step.location.lng}}&zoom=15\\\" /> -->\\r\\n                        <div (click)=\\\"step.edit = true;\\\" *ngIf=\\\"!step.edit\\\">\\r\\n                            <mat-card-title>{{step.title}}</mat-card-title>\\r\\n                            <mat-card-subtitle>Days: {{step.days}} Costs: {{stepTotalCosts(step)}}</mat-card-subtitle>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"step.edit\\\">\\r\\n                            <places-input\\r\\n                                #stepTitleBox\\r\\n                                [inputValue]=\\\"step.title\\\"\\r\\n                                placeholderInput=\\\"Next Stop\\\"\\r\\n                                (selectionChanged)=\\\"placesSelectionUpdate($event, i)\\\"\\r\\n                            ></places-input>\\r\\n                            <mat-form-field>\\r\\n                                <input matInput [(ngModel)]=\\\"step.days\\\" type=\\\"number\\\" />\\r\\n                            </mat-form-field>\\r\\n                            <button (click)=\\\"stepUpdate(step);step.edit = false;\\\">Done</button>\\r\\n                            <button (click)=\\\"removeStep(i);\\\">Remove</button>\\r\\n                        </div>\\r\\n                </mat-card-header>\\r\\n                <!--                 \\r\\n                <img mat-card-image src=\\\"http://localhost:4200/places/staticmap?lat={{step.location.lat}}&lng={{step.location.lng}}&zoom=11\\\" />\\r\\n                 -->\\r\\n                <div mat-card-image *ngIf=\\\"step.location\\\">\\r\\n                    <agm-map [latitude]=\\\"step.location.lat\\\" [longitude]=\\\"step.location.lng\\\" [zoom]=\\\"11\\\">\\r\\n                        <agm-marker [latitude]=\\\"step.location.lat\\\" [longitude]=\\\"step.location.lng\\\"></agm-marker>\\r\\n                    </agm-map>\\r\\n                </div>\\r\\n                <mat-card-content>\\r\\n                    <div *ngIf=\\\"step.distance\\\">\\r\\n                        Distance to your next location: {{step.distance.distance.text}} ({{step.distance.duration.text}})\\r\\n                    </div>\\r\\n                </mat-card-content>\\r\\n                <mat-card-actions>\\r\\n                    <button mat-raised-button (click)=\\\"goToDetails(step._id)\\\">Details</button>\\r\\n                </mat-card-actions>\\r\\n                <mat-card-footer>\\r\\n                </mat-card-footer>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"overview-container\\\">\\r\\n    <app-file-upload \\r\\n    [(plan)]=\\\"plan._id\\\"\\r\\n    (saveCallback)=\\\"addFilesToPlan($event, plan._id)\\\"\\r\\n    [url]=\\\"fileupload.fileurl\\\"\\r\\n    maxFiles=\\\"4\\\"\\r\\n    maxSize=\\\"2\\\"\\r\\n    fileExt=\\\"JPG, GIF, PNG, PDF\\\"\\r\\n    infoText=\\\"Drop your flight tickets, car voucher etc. here\\\" >\\r\\n    </app-file-upload>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Step } from '../../../models/Step';\r\nimport { Todo } from '../../../models/Todo';\r\nimport { PlaceSuggestion } from '../../../models/PlaceSuggestion';\r\nimport { PlaceSearchResult } from '../../../models/PlaceSearchResult';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { PlaceDetail } from '../../../models/PlaceDetail';\r\nimport { Configs } from '../../../configs';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FileService } from '../../../services/file.service';\r\nimport { saveAs } from 'file-saver';\r\nimport { File } from '../../../models/File';\r\nimport { Distance } from '../../../models/Distance';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.css']\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n  private plan: Planning;\r\n  private files;\r\n  private selectedSuggestion;\r\n  private fileupload = {\r\n    fileurl: Configs.fileUrl\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private fileService: FileService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.id);\r\n      });\r\n  }\r\n\r\n  sharePlan() {\r\n    this.router.navigate(['share', this.plan._id]);\r\n  }\r\n\r\n  goToDetails(stepid) {\r\n    this.router.navigate(['stepdetails', this.plan._id, stepid]);\r\n  }\r\n\r\n  startDateChanged() {\r\n    this.plan.endDate = this.plan.startDate;\r\n  }\r\n\r\n  planChanged() {\r\n    this.planningService.setPlanning(this.plan);\r\n  }\r\n\r\n  // stepChanged(step: Step){\r\n  //   this.planningService.addStep(this.plan, step);\r\n  // }\r\n\r\n  placesSelectionChanged(suggest: PlaceSuggestion) {\r\n    this.selectedSuggestion = suggest;\r\n  }\r\n\r\n  placesSelectionUpdate(suggest: Todo, index) {\r\n    if (!suggest || !suggest.title) return;\r\n\r\n\r\n    let step = this.plan.steps[index];\r\n    step.title = suggest.title;\r\n    //step.location = suggest.location;\r\n    //this.stepChanged(step);\r\n  }\r\n\r\n  stepTotalCosts(step: Step) {\r\n    return this.planningService.stepTotalCosts(step);\r\n  }\r\n\r\n  addStep(todo: Todo, days) {\r\n    var newStep = new Step();\r\n    newStep.title = todo.title;\r\n    newStep.days = days;\r\n    newStep.location = todo.location;\r\n    this.planningService.addStep(this.plan, newStep);\r\n    this.planningService.setPlanning(this.plan).then(newPlanning => {\r\n      this.plan = newPlanning;\r\n    });;\r\n  }\r\n\r\n  stepUpdate(step: Step) {\r\n    this.planningService.removeEdit(step);\r\n    this.planningService.setPlanning(this.plan);\r\n  }\r\n\r\n  removeStep(index) {\r\n    this.plan.steps.splice(index, 1);\r\n    this.planningService.setPlanning(this.plan);\r\n  }\r\n\r\n  refreshFiles(status) {\r\n    if (status) {\r\n      this.fileService.loadFilesForPlan(Configs.fileUrl, this.plan._id).subscribe((files: Array<File>) => {\r\n\r\n        files.forEach(file => {\r\n          this.plan.files\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  addFilesToPlan(newFiles: File[]) {\r\n    this.planningService.addFilesToPlan(this.plan, newFiles);\r\n  }\r\n\r\n  downloadFile(file: File) {\r\n    this.fileService.downloadFile(file);\r\n  }\r\n}\r\n\r\n","module.exports = \"\\r\\n.overview-title{\\r\\n    padding-left: 10px;\\r\\n}\"","module.exports = \"\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n        <mat-icon (click)=\\\"backToPlannings()\\\">keyboard_backspace</mat-icon>\\r\\n        <span class=\\\"overview-title\\\">{{plan.title}}</span>\\r\\n    </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-tab-group (selectedTabChange)=\\\"tabChanged($event)\\\">\\r\\n    <mat-tab #overviewTab label=\\\"Overview\\\" >\\r\\n        <div *ngIf=\\\"overviewTab.isActive\\\">\\r\\n            <app-overview></app-overview>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab #costsTab label=\\\"Costs\\\">\\r\\n        <div *ngIf=\\\"costsTab.isActive\\\">\\r\\n            <app-money></app-money>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab #imagesTab label=\\\"Images\\\">\\r\\n        <div *ngIf=\\\"imagesTab.isActive\\\">\\r\\n            <app-images></app-images>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab #routerTab label=\\\"Route\\\">\\r\\n        <div *ngIf=\\\"routerTab.isActive\\\">\\r\\n            <app-route></app-route>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab #filesTab label=\\\"Files\\\">\\r\\n        <div *ngIf=\\\"filesTab.isActive\\\">\\r\\n            <app-files></app-files>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\\r\\n\\r\\n<!-- <nav mat-tab-nav-bar>\\r\\n    <a mat-tab-link\\r\\n       *ngFor=\\\"let link of navLinks\\\"\\r\\n       [routerLink]=\\\"link.path\\\"\\r\\n       routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n       [active]=\\\"rla.isActive\\\">\\r\\n      {{link.label}}\\r\\n    </a>\\r\\n  </nav> -->\\r\\n\\r\\n  <!-- <nav mat-tab-nav-bar>\\r\\n    <a mat-tab-link\\r\\n       [routerLink]=\\\"planoverview/overview\\\"\\r\\n       routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n       [active]=\\\"rla.isActive\\\">\\r\\n      Oerview\\r\\n    </a>\\r\\n    \\r\\n    <a mat-tab-link\\r\\n    [routerLink]=\\\"planoverview/route\\\"\\r\\n    routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n    [active]=\\\"rla.isActive\\\">\\r\\n   Route\\r\\n </a>\\r\\n  </nav> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Planning } from '../../models/Planing';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { PlanningService } from '../../services/planning.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-planoverview',\r\n  templateUrl: './planoverview.component.html',\r\n  styleUrls: ['./planoverview.component.css']\r\n})\r\nexport class PlanoverviewComponent implements OnInit {\r\n\r\n  public plan: Planning;\r\n\r\n  constructor(private changeDetectRef: ChangeDetectorRef, \r\n    private planningService: PlanningService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route\r\n    .params\r\n    .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.id);\r\n    });\r\n  }\r\n\r\n  backToPlannings(){\r\n    this.router.navigate(['plannings']);\r\n  }\r\n\r\n  tabChanged(event) {\r\n    console.log(event);\r\n  }\r\n  ngAfterViewChecked() {\r\n    //check later: this fixes the error -> Error: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value:\r\n    this.changeDetectRef.detectChanges();\r\n  }\r\n}\r\n","module.exports = \"agm-map {\\r\\n    height: 300px;\\r\\n  }\"","module.exports = \"\\r\\n<div *ngIf=\\\"startLocation\\\">\\r\\n    <agm-map #routeOverview [latitude]=\\\"startLocation.lat\\\" [longitude]=\\\"startLocation.lng\\\">\\r\\n        <agm-marker *ngFor=\\\"let step of plan.steps\\\" [latitude]=\\\"step.location.lat\\\" [longitude]=\\\"step.location.lng\\\"></agm-marker>\\r\\n        <!-- <agm-marker *ngFor=\\\"let todo of step.todos\\\" [latitude]=\\\"todo.location.lat\\\" [longitude]=\\\"todo.location.lng\\\"></agm-marker> -->\\r\\n\\r\\n        <agm-polyline>\\r\\n                <agm-polyline-point *ngFor=\\\"let step of plan.steps\\\" [latitude]=\\\"step.location.lat\\\" [longitude]=\\\"step.location.lng\\\"></agm-polyline-point>\\r\\n        </agm-polyline>\\r\\n    </agm-map>\\r\\n</div>\\r\\n\\r\\n<div *ngFor=\\\"let step of plan.steps; let i = index;\\\">\\r\\n    <h3>{{i+1}}. {{step.title}}</h3>\\r\\n    <a href=\\\"\\\">link</a>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Step } from '../../../models/Step';\r\nimport { Todo } from '../../../models/Todo';\r\nimport { PlaceSuggestion } from '../../../models/PlaceSuggestion';\r\nimport { PlaceSearchResult } from '../../../models/PlaceSearchResult';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { PlaceDetail } from '../../../models/PlaceDetail';\r\nimport { Configs } from '../../../configs';\r\nimport { Location } from '../../../models/Location'\r\n\r\n@Component({\r\n  selector: 'app-route',\r\n  templateUrl: './route.component.html',\r\n  styleUrls: ['./route.component.css']\r\n})\r\nexport class RouteComponent implements OnInit {\r\n  private plan: Planning;\r\n  public startLocation: Location\r\n  public locations: Array<Location>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) {\r\n    this.locations = [];\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  private init(){\r\n    this.route\r\n    .params\r\n    .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.id);\r\n        if(this.plan.steps == undefined){\r\n          this.plan.steps = [];\r\n        }\r\n        this.setLocations();\r\n    });\r\n  }\r\n\r\n  private setLocations(){\r\n    if(this.plan.steps.length === 0) return;\r\n\r\n    this.startLocation = this.plan.steps[0].location;\r\n    this.locations = [];\r\n    for(var i = 0; i < this.plan.steps.length; i++){\r\n      let step = this.plan.steps[i];\r\n      this.locations.push(step.location);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>\\r\\n    Share Plan {{plan.title}}\\r\\n</h1>\\r\\n\\r\\n<label>e-mail</label>\\r\\n<input type=\\\"email\\\" [(ngModel)]=\\\"email\\\"/>\\r\\n\\r\\n<div>\\r\\n    <button (click)=\\\"share()\\\">Share</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Configs } from '../../../configs';\r\n\r\n@Component({\r\n  selector: 'app-share',\r\n  templateUrl: './share.component.html',\r\n  styleUrls: ['./share.component.css']\r\n})\r\nexport class ShareComponent implements OnInit {\r\n  private plan: Planning;\r\n  public email: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  private init(){\r\n    this.route\r\n    .params\r\n    .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.id);\r\n    });\r\n  }\r\n  \r\n  share(){\r\n    this.http.post(Configs.shareUrl, { email: this.email, planid: this.plan._id }).subscribe(() => {\r\n      this.updatePlan();\r\n    });\r\n  }\r\n  \r\n  private updatePlan(){\r\n    this.http.get(Configs.planningsUrl).subscribe( (items: Array<Planning>) => {\r\n        this.planningService.setPlannings(items);\r\n        this.plan = this.planningService.getPlanning(this.plan._id);\r\n        this.router.navigate(['planoverview', this.plan._id]);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"agm-map {\\r\\n    height: 150px;\\r\\n  }\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n        <mat-icon (click)=\\\"backToPlannings()\\\">keyboard_backspace</mat-icon>\\r\\n        <span class=\\\"overview-title\\\">{{plan.title}}</span>\\r\\n    </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<!-- \\r\\n<span (click)=\\\"backToPlannings()\\\"> back</span>\\r\\n<h1>{{plan.title}} </h1> -->\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"step\\\">\\r\\n    <h3 (click)=\\\"step.edit = true;\\\" *ngIf=\\\"!step.edit\\\">\\r\\n        {{step.title}} ({{step.days}} days)\\r\\n    </h3>\\r\\n    <div *ngIf=\\\"step.edit\\\">\\r\\n        <places-input\\r\\n            #stepTitleBox\\r\\n            [inputValue]=\\\"step.title\\\"\\r\\n            placeholderInput=\\\"Next Stop\\\"\\r\\n            (selectionChanged)=\\\"stepSelectionUpdate($event)\\\"\\r\\n        ></places-input>\\r\\n        <input [(ngModel)]=\\\"step.days\\\" type=\\\"number\\\" />\\r\\n        <button (click)=\\\"stepUpdate(step);step.edit = false;\\\">Done</button>\\r\\n        <button (click)=\\\"removeStep(i);\\\">Remove</button>\\r\\n    </div>\\r\\n    <mat-card>\\r\\n        <mat-card-header>\\r\\n            <mat-card-title></mat-card-title>\\r\\n        </mat-card-header>\\r\\n\\r\\n        <agm-map *ngIf=\\\"step.location\\\" [latitude]=\\\"step.location.lat\\\" [longitude]=\\\"step.location.lng\\\" [zoom]=\\\"12\\\">\\r\\n            <agm-marker [latitude]=\\\"step.location.lat\\\" [longitude]=\\\"step.location.lng\\\"></agm-marker>\\r\\n            <agm-marker *ngFor=\\\"let todo of getTodosWithLocation(step.todos)\\\" [latitude]=\\\"todo.location.lat\\\" [longitude]=\\\"todo.location.lng\\\"></agm-marker>\\r\\n        </agm-map>\\r\\n\\r\\n        <mat-card-content>\\r\\n            <mat-list>\\r\\n                <mat-list-item *ngFor=\\\"let todo of step.todos; let i = index;\\\">\\r\\n                    <span>{{todo.title}} - ({{todo.costs}})</span>\\r\\n                    <button (click)=\\\"removeTodo(i, step)\\\">Remove</button>\\r\\n                </mat-list-item>\\r\\n            </mat-list>\\r\\n        </mat-card-content>\\r\\n        <mat-card-footer>\\r\\n            <places-input #todoInput\\r\\n                placeholderInput=\\\"Next Todo ..\\\"\\r\\n                (selectionChanged)=\\\"todoChanged($event)\\\"\\r\\n            ></places-input>\\r\\n            \\r\\n            <mat-form-field>\\r\\n                <input #todoCosts matInput placeholder=\\\"Costs\\\" type=\\\"number\\\"/>\\r\\n            </mat-form-field>\\r\\n            <button mat-raised-button (click)=\\\"addTodo(step, todoCosts.value);todoInput.inputValue = null;todoCosts.value = null;\\\">add todo</button>\\r\\n\\r\\n            <app-file-upload \\r\\n            [(plan)]=\\\"plan._id\\\"\\r\\n            (saveCallback)=\\\"addFilesToStep($event, step)\\\"\\r\\n            [url]=\\\"fileupload.fileurl\\\"\\r\\n            maxFiles=\\\"4\\\"\\r\\n            maxSize=\\\"2\\\"\\r\\n            fileExt=\\\"JPG, GIF, PNG, PDF\\\"\\r\\n            infoText=\\\"Drop your hotel, guesthouse etc. confirmations here\\\" >\\r\\n            </app-file-upload>\\r\\n\\r\\n            <step-files [(plan)]=\\\"plan\\\" [(step)]=\\\"step\\\"></step-files>\\r\\n        </mat-card-footer>\\r\\n    </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Planning } from '../../../models/Planing';\r\nimport { PlanningService } from '../../../services/planning.service';\r\nimport { Step } from '../../../models/Step';\r\nimport { Todo } from '../../../models/Todo';\r\nimport { Configs } from '../../../configs';\r\nimport { FileService } from '../../../services/file.service';\r\nimport { File } from '../../../models/File';\r\n\r\n@Component({\r\n  selector: 'app-stepdetail',\r\n  templateUrl: './stepdetail.component.html',\r\n  styleUrls: ['./stepdetail.component.css']\r\n})\r\nexport class StepDetailComponent implements OnInit {\r\n  private plan: Planning;\r\n  private step: Step;\r\n  private selectedTodo: Todo;\r\n  \r\n  constructor(\r\n    private http: HttpClient,\r\n    private fileService: FileService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planningService: PlanningService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.plan = this.planningService.getPlanning(params.planid);\r\n        if (this.plan.steps != undefined) {\r\n          this.step = this.plan.steps.find(s => { return s._id == params.stepid });\r\n        }\r\n      });\r\n  }\r\n\r\n  backToPlannings() {\r\n    this.router.navigate(['planoverview', this.plan._id]);\r\n  }\r\n\r\n  planChanged() {\r\n    this.planningService.setPlanning(this.plan);\r\n  }\r\n\r\n  stepUpdate(step: Step){\r\n    this.planningService.removeEdit(step);\r\n    this.planningService.setPlanning(this.plan);\r\n  }\r\n\r\n  todoChanged(newTodo: Todo) {\r\n    this.selectedTodo = newTodo;\r\n  }\r\n\r\n  stepSelectionUpdate(todo: Todo) {\r\n    //this.selectedTodo = todo;\r\n    this.step.title = todo.title;\r\n    // console.log(todo);\r\n    // this.planningService.setPlanning(this.plan);\r\n\r\n    // disable places\r\n    // this.placeDetails(suggest.place_id, (place: PlaceDetail) => {\r\n    //   let step = this.plan.steps[index];\r\n    //   step.title = place.name;\r\n    //   step.location = place.geometry.location;\r\n    //   this.planningService.setPlanning(this.plan);\r\n    // });\r\n  }\r\n\r\n\r\n  getTodosWithLocation(todos: Array<Todo>) {\r\n    return todos.filter(item => { return item.location; });\r\n  }\r\n\r\n  addTodo(step: Step, costs) {\r\n    \r\n    this.selectedTodo.costs = Number.parseFloat(costs);\r\n    step.todos.push(this.selectedTodo);\r\n    this.planningService.setPlanning(this.plan);\r\n    this.selectedTodo = null;\r\n  }\r\n\r\n  removeTodo(index, step: Step) {\r\n    step.todos.splice(index, 1);\r\n    this.planningService.setPlanning(this.plan);\r\n  }\r\n  refreshFiles(status) {\r\n    if (status) {\r\n      this.fileService.loadFilesForPlan(Configs.fileUrl, this.plan._id).subscribe((files: Array<File>) => {\r\n\r\n        files.forEach(() => {\r\n          this.plan.files;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  addFilesToStep(newFiles, step) {\r\n\r\n    if (!(\"files\" in step)) {\r\n      step.files = [];\r\n    }\r\n\r\n    step.files = step.files.concat(newFiles);\r\n    this.planningService.setPlanning(this.plan);\r\n\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n        <!-- <mat-icon (click)=\\\"backToPlannings()\\\">keyboard_backspace</mat-icon> -->\\r\\n        <span >Register</span>\\r\\n    </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"emailAdress\\\" type=\\\"email\\\" placeholder=\\\"Your email adress\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Your password\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-raised-button (click)=\\\"register()\\\">Register</button>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Configs } from '../../configs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit{\n  \n  private emailAdress: string;\n  private password: string;\n  \n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ){}\n  \n  ngOnInit(): void {\n    // this.route\n    // .queryParams\n    // .filter(params => params.access_token)\n    // .subscribe(params => {\n    //   var token = params.access_token;\n    //   if(token){\n    //     this.authService.setAccessToken(token);\n    //     this.router.navigate(['plannings']);\n    //   }\n      \n    // });\n  }\n\n  register(){\n    //alert(\"register: \" + this.emailAdress + \" \" + this.password);\n    var newuser = {\n      email: this.emailAdress,\n      password: this.password\n    };\n    this.http.post(Configs.registerUrl, newuser)\n    .subscribe((resp: any) => {\n\n      this.authService.setAccessToken(resp.token);\n      this.router.navigate(['plannings']);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n\\n  <h3>\\n    With plan it you can plan your next awesome trip ... \\n    You can plan your routes, invite your travel mates, \\n    add documents, share images you made,\\n    calculate costs and see a weather forecast.\\n  </h3>\\n\\n  <h4>At the moment you can only login with your email adress or your google account. More Provider will be added soon ...</h4>\\n\\n  <h4><a target=\\\"_self\\\" rel=\\\"noopener\\\" href=\\\"/callback\\\">Login with E-Mail</a></h4>\\n  <h4><a target=\\\"_self\\\" rel=\\\"noopener\\\" href=\\\"http://localhost:4200/auth/google\\\">Login with Google</a></h4>\\n\\n</div>\\n  \\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit {\n  \n  title = 'plan it';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    \n    if(this.authService.getAccessToken()){\n      this.router.navigate(['plannings']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    private static accessToken: string;\r\n\r\n    public setAccessToken(token: string){\r\n        sessionStorage.setItem('access_token',token);\r\n    }\r\n\r\n    public getAccessToken(){\r\n        var token = sessionStorage.getItem('access_token');\r\n        return token;\r\n    }\r\n}","import { Injectable } from '@angular/core';\n//import { Headers, RequestOptions } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n//import { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\n// import 'rxjs/add/operator/catch';\n\nimport { Configs } from '../configs';\nimport { File } from '../models/File';\n\n@Injectable()\nexport class FileService {\n    constructor(private http: HttpClient) { }\n\n    upload(url, formData) {\n        return this.http.post(url, formData);\n\n    }\n    loadFilesForPlan(url, planid) {\n        url = url + '?planid=' + planid;\n        return this.http.get(url);\n        /*.map( (files:Array<File>) => {\n            let result = {};\n            for(let i = 0; i < files.length; i ++){\n                let file = files[i];\n                if(\"\"+file.link in result){\n                    result[\"\"+file.link].push(file);\n                }\n                else{\n                    result[\"\"+file.link] = [];\n                    result[\"\"+file.link].push(file);\n                }\n                \n            }\n            return result;\n        });\n        */\n    }\n    deleteFile(url, fileid) {\n        url += '?id=' + fileid;\n        return this.http.delete(url);\n    }\n\n    downloadFile(file: File) {\n        const headers = new HttpHeaders();\n        headers.append('Accept', 'text/plain');\n        this.http.get(file.url, { headers: headers, responseType: 'blob' }).subscribe(resp => {\n            //const blob = new Blob([resp], { type: 'application/octet-stream' });\n            const blob = new Blob([resp], { type: 'application/pdf' });\n            //saveAs(blob, file.filename + \".\" + file.extension);\n            this.showFile(blob, file.filename);\n        });\n    }\n\n    private showFile(newBlob, filename) {\n        // It is necessary to create a new blob object with mime-type explicitly set\n        // otherwise only Chrome works like it should\n        //var newBlob = new Blob([blob], {type: \"application/pdf\"})\n\n        // IE doesn't allow using a blob object directly as link href\n        // instead it is necessary to use msSaveOrOpenBlob\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveOrOpenBlob(newBlob);\n            return;\n        }\n\n        // var reader = new FileReader();\n        // //var out = new Blob([this.response], {type: 'application/pdf'});\n        // reader.onload = function(e){\n        //   window.location.href = reader.result;\n        // }\n        // reader.readAsDataURL(newBlob);\n        var url = URL.createObjectURL(newBlob);\n        window.open(url, '_self');\n        return;\n\n        // For other browsers: \n        // Create a link pointing to the ObjectURL containing the blob.\n\n        // const data = window.URL.createObjectURL(newBlob);\n        // var link = document.createElement('a');\n        // link.href = data;\n        // link.download=filename;\n        // link.click();\n        // setTimeout(function(){\n        //   // For Firefox it is necessary to delay revoking the ObjectURL\n        //   console.log(\"show file calling 2\");\n        //   window.URL.revokeObjectURL(data)\n        // , 100});\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AuthService } from './auth.service'\r\nimport { Router } from '@angular/router';\r\n \r\n@Injectable()\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n \r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.authService.getAccessToken();\r\n    const authHeader = this.getAuthHeader(token);\r\n    // Clone the request to add the new header.\r\n    const authReq = req.clone({headers: req.headers.set('Authorization', authHeader)});\r\n    // Pass on the cloned request instead of the original request.\r\n    return next\r\n      .handle(authReq)\r\n      .catch((err: any, caught) => {\r\n        if(err.status == 401 || err.status == 403){\r\n          this.router.navigate(['callback'])\r\n        }\r\n        return Observable.throw(err);\r\n      });\r\n  }\r\n\r\n  private getAuthHeader(token: string) : string{\r\n      return `Bearer ${token}`;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Planning } from '../models/Planing';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Configs } from '../configs';\r\nimport { File } from '../models/File';\r\nimport { Step } from '../models/Step';\r\nimport { Distance } from '../models/Distance';\r\nimport { resolve } from 'q';\r\n\r\n@Injectable()\r\nexport class PlanningService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public setPlannings(plannings: Array<Planning>) {\r\n        sessionStorage.setItem('plannings', JSON.stringify(plannings));\r\n    }\r\n\r\n    public setPlanning(planning: Planning): Promise<Planning> {\r\n        let promise = new Promise<Planning>((resolve, reject) => {\r\n            this.updatePlanning(planning).subscribe((plannings: Array<Planning>) => {\r\n\r\n                // var _planning: Planning;\r\n                // for (var i = 0; i < plannings.length; i++) {\r\n                //     _planning = plannings[i];\r\n                //     if (_planning._id == planning._id) {\r\n                //         plannings[0] = planning;\r\n                //     }\r\n                // }\r\n                this.setPlannings(plannings);\r\n                resolve(this.getPlanning(planning._id));\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    public getPlannings(): Array<Planning> {\r\n        var plannings = JSON.parse(sessionStorage.getItem('plannings'));\r\n        return plannings;\r\n    }\r\n\r\n    public getPlanning(id: string): Planning {\r\n        var plannings = this.getPlannings();\r\n        var planning;\r\n        for (var i = 0; i < plannings.length; i++) {\r\n            planning = plannings[i];\r\n            if (planning._id == id) {\r\n                if (planning.steps == undefined) {\r\n                    planning.steps = [];\r\n                }\r\n                if (planning.costs == undefined) {\r\n                    planning.costs = [];\r\n                }\r\n                return planning;\r\n            }\r\n        }\r\n    }\r\n\r\n    public stepTotalCosts(step: Step) {\r\n        let totalCosts = 0;\r\n        if (step && step.todos && step.todos.length > 0) {\r\n            step.todos.forEach(todo => {\r\n                totalCosts += todo.costs;\r\n            });\r\n        }\r\n        return totalCosts;\r\n    }\r\n\r\n    public removeEdit(step) {\r\n        //we need to remove the temp field edit that is needed to show input fields\r\n        if (\"edit\" in step) {\r\n            delete step[\"edit\"];\r\n        }\r\n    }\r\n\r\n    public addStep(plan: Planning, step: Step) {\r\n\r\n\r\n        if (!step._id) {\r\n            // this is when step is a new step!\r\n            plan.steps.push(step);\r\n        }\r\n\r\n        //this.recaluclateDistances(plan, step);\r\n    }\r\n\r\n    public addFilesToPlan(plan: Planning, newFiles: File[]) {\r\n        if (!plan.files) {\r\n            plan.files = [];\r\n        }\r\n        plan.files = plan.files.concat(newFiles);\r\n        this.setPlanning(plan);\r\n    }\r\n\r\n    public deleteFileFromPlan(plan: Planning, index: number) {\r\n        plan.files.splice(index, 1);\r\n        this.setPlanning(plan);\r\n    }\r\n\r\n    private updatePlanning(plan: Planning) {\r\n        return this.http.post(Configs.planningsUrl, plan);\r\n    }\r\n\r\n    private recaluclateDistances(plan: Planning, step: Step) {\r\n        // Recalculate the distances for between each step      \r\n        if (plan.steps.length > 0) {\r\n\r\n            let prevStep;\r\n            if (!step._id) {\r\n                // this is when step is a new step!\r\n                prevStep = plan.steps[plan.steps.length - 2];\r\n            }\r\n            else {\r\n                // this is when step already exists\r\n                for (let i = 0; i < plan.steps.length; i++) {\r\n                    if (plan.steps[i]._id == step._id) {\r\n                        if (i > 0) {\r\n                            prevStep = plan.steps[i - 1];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (prevStep) {\r\n\r\n                var url = Configs.placesDistanceUrl + \"?startLat=\" + prevStep.location.lat + \"&startLng=\" + prevStep.location.lng;\r\n                url += \"&endLat=\" + step.location.lat + \"&endLng=\" + step.location.lng;\r\n                this.http.get(url).subscribe((rows: Array<any>) => {\r\n                    if (rows.length > 0 && rows[0].elements.length > 0) {\r\n                        var result = rows[0].elements[0];\r\n                        var distance = new Distance();\r\n                        distance.distance = {\r\n                            text: result.distance.text,\r\n                            value: result.distance.value\r\n                        };\r\n                        distance.duration = {\r\n                            text: result.duration.text,\r\n                            value: result.duration.value\r\n                        };\r\n                        prevStep.distance = distance;\r\n                    }\r\n\r\n                    this.setPlanning(plan);\r\n                });\r\n            }\r\n            else {\r\n                this.setPlanning(plan);\r\n            }\r\n        }\r\n        else {\r\n            this.setPlanning(plan);\r\n        }\r\n    }\r\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}